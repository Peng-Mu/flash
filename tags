!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AD	common/inc/pc_trie.h	/^	void *AD[1 << COMPRESS_LYAER_NUMBER];$/;"	m	struct:sNHITableEntry
AD_IN_FIELDS	common/inc/defines.h	35;"	d
ALIGN	common/inc/utils.h	15;"	d
ALIGN_UP	common/inc/utils.h	14;"	d
ALL_ONE	common/inc/utils.h	19;"	d
API	common/inc/Platform.h	11;"	d
AllocatNHITable	pc_trie.c	/^TcError AllocatNHITable(NHIModuleSet* lpmModuleSet, NHITableEntry **NHITableIndex, int *moduleId)$/;"	f
BACKDOOR	common/inc/types.h	6;"	d
BASE	makefile	/^		BASE = $(basename $(SRCS))$/;"	m
BEBitBufferClearBit	utils.c	/^TcError BEBitBufferClearBit(void* buff, s32 buff_width, s32 bit) {$/;"	f
BEBitBufferClearBits	utils.c	/^TcError BEBitBufferClearBits(void* buff, s32 buff_width, s32 bitStart, s32 bitCount) {$/;"	f
BEBitBufferCmp	utils.c	/^int BEBitBufferCmp(const void *in1, const void *in2, s32 start, s32 bitCnt, s32 *pPrefixLen) {$/;"	f
BEBitBufferCmp1	utils.c	/^static int BEBitBufferCmp1(void *in1, void *in2, s32 start, s32 bitCnt, s32 *pPrefixLen) {$/;"	f	file:
BEBitBufferCmp8	utils.c	/^static int BEBitBufferCmp8(void *void_in1, void *void_in2, s32 start, s32 bitCnt, s32 *pPrefixLen) {$/;"	f	file:
BEBitBufferCountLeadingZero	utils.c	/^TcError BEBitBufferCountLeadingZero(const void* in, s32 width, int *pCount) {$/;"	f
BEBitBufferGetBit	utils.c	/^TcError BEBitBufferGetBit(const void* buff, s32 buff_width, s32 bit, s8* bitValue) {$/;"	f
BEBitBufferGetBits	utils.c	/^TcError BEBitBufferGetBits(const void* buff, s32 buff_width, s32 bitStart, s32 bitCount, void* out) {$/;"	f
BEBitBufferSetBit	utils.c	/^TcError BEBitBufferSetBit(void* buff, s32 buff_width, s32 bit) {$/;"	f
BEBitBufferSetBits	utils.c	/^TcError BEBitBufferSetBits(void* buff, s32 buff_width, s32 bitStart, s32 bitCount, const void* in) {$/;"	f
BEBitBufferShiftLeft	utils.c	/^TcError BEBitBufferShiftLeft(const void *buff, s32 width, int bitCnt) {$/;"	f
BEBitBufferXOR	utils.c	/^TcError BEBitBufferXOR(void* dst, const void* src, s32 width) {$/;"	f
BEBitBufferXOR8	utils.c	/^static TcError BEBitBufferXOR8(void *in_dst, void *in_src, int width) {$/;"	f	file:
BITS_PER_10_BYTES	common/inc/defines.h	25;"	d
BITS_PER_BYTE	common/inc/defines.h	24;"	d
BITS_PER_HEXCHAR	common/inc/defines.h	22;"	d
BITS_PER_S32	common/inc/defines.h	26;"	d
BITS_PER_S64	common/inc/defines.h	27;"	d
BYTE_COUNT	common/inc/utils.h	16;"	d
BYTE_SHIFT	common/inc/defines.h	23;"	d
BigELittleEToggle	utils.c	/^static TcError BigELittleEToggle(const void* in, int inWidth, void* out, int outWidth)$/;"	f	file:
BigEndianBitBufferStr	utils.c	/^TcError BigEndianBitBufferStr(const void* bigEBuffer, int width, char* outStr, int outStrSize)$/;"	f
BigEndianBitBufferStrToBinary	utils.c	/^TcError BigEndianBitBufferStrToBinary(void* bigEBuffer, s32* count)$/;"	f
BigEndianBitBufferToBitBuffer	utils.c	/^TcError BigEndianBitBufferToBitBuffer(const void* bigEBuffer, int bigEBufferWidth, void* littleEBuffer, int littleEBufferWidth)$/;"	f
BitBufferAND	utils.c	/^TcError BitBufferAND(void* dst, const void* src, s32 width) {$/;"	f
BitBufferAsBigEndian16	utils.c	/^TcError BitBufferAsBigEndian16(const void* buff, s32 buffSize, s32 bitStart, s16* pResult)$/;"	f
BitBufferAsBigEndian32	utils.c	/^TcError BitBufferAsBigEndian32(const void* buff, s32 buffSize, s32 bitStart, s32* pResult)$/;"	f
BitBufferAsBitEndian8	utils.c	/^TcError BitBufferAsBitEndian8(char* buff, s32 bitSize)$/;"	f
BitBufferAsLittleEndian16	utils.c	/^TcError BitBufferAsLittleEndian16(const void* buff, s32 buffSize, s32 bitStart, s16* pResult)$/;"	f
BitBufferAsLittleEndian32	utils.c	/^TcError BitBufferAsLittleEndian32(const void* buff, s32 buffSize, s32 bitStart, s32* pResult)$/;"	f
BitBufferBinStrToHex	utils.c	/^TcError BitBufferBinStrToHex(char *buffBitStr, u32 bitStrLen, char *buffHexStr, u32 buffHexStrSize)$/;"	f
BitBufferClearBit	utils.c	/^TcError BitBufferClearBit(void* buff, s32 buffSize, s32 bit)$/;"	f
BitBufferClearBits	utils.c	/^TcError BitBufferClearBits(void* buff, s32 buffSize, s32 bitStart, s32 bitCount) {$/;"	f
BitBufferCmp	utils.c	/^int BitBufferCmp(const void *in1, const void *in2, s32 start, s32 bitCnt)$/;"	f
BitBufferCountLeadingZero	utils.c	/^TcError BitBufferCountLeadingZero(const void* in, s32 inSize, s32 width, int* count) {$/;"	f
BitBufferCountOne	utils.c	/^TcError BitBufferCountOne(const void* in, s32 inSize, s32 width, s32* count)$/;"	f
BitBufferCountZero	utils.c	/^TcError BitBufferCountZero(const void* in, s32 inSize, s32 width, s32* count) {$/;"	f
BitBufferGetBit	utils.c	/^TcError BitBufferGetBit(const void* buff, s32 buffSize, s32 bit, s8* pBitValue)$/;"	f
BitBufferGetBits	utils.c	/^TcError BitBufferGetBits(const void* buff, s32 buffSize, s32 bitStart, s32 bitCount, void* out, s32 outSize)$/;"	f
BitBufferIsAllOne	utils.c	/^TcError BitBufferIsAllOne(const void* in, s32 inSize, s32 width, s8* pResult)$/;"	f
BitBufferIsAllZero	utils.c	/^TcError BitBufferIsAllZero(const void* in, s32 inSize, s32 width, s8* pResult)$/;"	f
BitBufferOR	utils.c	/^TcError BitBufferOR(void* dst, const void* src, s32 width) {$/;"	f
BitBufferSetBit	utils.c	/^TcError BitBufferSetBit(void* buff, s32 buffSize, s32 bit)$/;"	f
BitBufferSetBits	utils.c	/^TcError BitBufferSetBits(void* buff, s32 buffSize, s32 bitStart, s32 bitCount, const void* in, s32 inSize)$/;"	f
BitBufferShiftLeft	utils.c	/^TcError BitBufferShiftLeft(const void* in, s32 width, s32 shift) {$/;"	f
BitBufferShiftRight	utils.c	/^TcError BitBufferShiftRight(const void* in, s32 width, s32 shift) {$/;"	f
BitBufferStr	utils.c	/^TcError BitBufferStr(const void* in, s32 inSize, char* out, s32 outSize)$/;"	f
BitBufferStrToBinStr	utils.c	/^TcError BitBufferStrToBinStr(const char *buff, char *out, s32 outputSize)$/;"	f
BitBufferStrToBinary	utils.c	/^TcError BitBufferStrToBinary(char* key, s32* count)$/;"	f
BitBufferStrWithBitCnt	utils.c	/^TcError BitBufferStrWithBitCnt(const void* in, s32 inBitCnt, char* out, s32 outSize)$/;"	f
BitBufferToBigEndianBitBuffer	utils.c	/^TcError BitBufferToBigEndianBitBuffer(const void* littleBuffer, int width, void* bigBuffer, int bigBufferWidth)$/;"	f
BitBufferToBinStr	utils.c	/^TcError BitBufferToBinStr(const char* buffer, int bufferSize, int width, char* out, int* outSize)$/;"	f
BitBufferValidate	utils.c	/^static TcError BitBufferValidate(const void* buff, s32 buffSize, s32 bit, s32 bitCount)$/;"	f	file:
BitBufferValidateHexaDecimalStr	utils.c	/^TcError BitBufferValidateHexaDecimalStr(const char* buffer)$/;"	f
BitBufferXOR	utils.c	/^TcError BitBufferXOR(void* dst, const void* src, s32 width) {$/;"	f
BitDigitToBinStr	utils.c	/^TcError BitDigitToBinStr(const char* buffer, int bufferSize, int width, char* out, int* outSize)$/;"	f
ByteBitsReversal	utils.c	/^TcError ByteBitsReversal(u8* buff) {$/;"	f
CHECK_ERROR	common/inc/log.h	93;"	d
CHECK_ERROR_WARN	common/inc/log.h	106;"	d
CHECK_FOR_EOF	Io.c	6;"	d	file:
COMPRESS_LYAER_NUMBER	common/inc/pc_trie.h	7;"	d
CPSS_NSE_MANAGER_ASCII_VAL_0	common/inc/defines.h	153;"	d
C_FILES	makefile	/^		C_FILES = $(shell ls *.c)$/;"	m
CreatePcTrie	pc_trie.c	/^TcError CreatePcTrie(pc_Trie **pcTrie, NHIModuleSet* lpmModuleSet, int rootId, int rootModuleId, NHITableEntry* rootEntryIndex)$/;"	f
DATA_DRAM_WIDTH	common/inc/defines.h	31;"	d
DATA_DRAM_WIDTH_IN_BITS	common/inc/defines.h	30;"	d
DEBUG_memset	common/inc/utils.h	72;"	d
DEBUG_memset	common/inc/utils.h	74;"	d
DELIM	common/inc/defines.h	172;"	d
DEPS	makefile	/^		DEPS = $(addsuffix .d, $(addprefix dep\/, $(BASE)))$/;"	m
DLList	common/inc/DLList.h	/^} DLList;$/;"	t	typeref:struct:sDLList
DLList_findHead	DLList.c	/^DLList *DLList_findHead(DLList *node) {$/;"	f
DLList_findTail	DLList.c	/^DLList *DLList_findTail(DLList *node) {$/;"	f
DLList_insertAfter	DLList.c	/^TcError DLList_insertAfter(DLList *current, DLList *new, comp_func comp) {$/;"	f
DLList_insertBefore	DLList.c	/^TcError DLList_insertBefore(DLList *current, DLList *new, comp_func comp) {$/;"	f
DataCmtNseLib	IoCmd.c	/^DataCmtNseLib;$/;"	t	typeref:struct:sDataCmtNseLib	file:
DataCmtOnlineRecord	IoCmd.c	/^DataCmtOnlineRecord;$/;"	t	typeref:struct:sDataCmtOnlineRecord	file:
DataCmtOnlineTable	IoCmd.c	/^DataCmtOnlineTable;$/;"	t	typeref:struct:sDataCmtOnlineTable	file:
DataCmtString	IoCmd.c	/^DataCmtString;$/;"	t	typeref:struct:sDataCmtString	file:
DataDbgLCInput	IoCmd.c	/^DataDbgLCInput;$/;"	t	typeref:struct:sDataDbgLCInput	file:
DataDbgLCLpmAD	IoCmd.c	/^DataDbgLCLpmAD;$/;"	t	typeref:struct:sDataDbgLCLpmAD	file:
DataDbgLCOutput	IoCmd.c	/^DataDbgLCOutput;$/;"	t	typeref:struct:sDataDbgLCOutput	file:
DataDbgLD3	IoCmd.c	/^DataDbgLD3;$/;"	t	typeref:struct:sDataDbgLD3	file:
DataDbgNFE	IoCmd.c	/^DataDbgNFE;$/;"	t	typeref:struct:sDataDbgNFE	file:
DataMdio	IoCmd.c	/^DataMdio;$/;"	t	typeref:struct:sDataMdio	file:
DataOpCodeLD2	IoCmd.c	/^DataOpCodeLD2;$/;"	t	typeref:struct:sDataOpCodeLD2	file:
DataOpCodeLD3	IoCmd.c	/^DataOpCodeLD3;$/;"	t	typeref:struct:sDataOpCodeLD3	file:
DataOpCodeNop	IoCmd.c	/^DataOpCodeNop;$/;"	t	typeref:struct:sDataOpCodeNop	file:
DataOpCodeQuiet	IoCmd.c	/^DataOpCodeQuiet;$/;"	t	typeref:struct:sDataOpCodeQuiet	file:
DataOpCode_LD5_LC	IoCmd.c	/^DataOpCode_LD5_LC;$/;"	t	typeref:struct:sDataOpCode_LD5_LC	file:
DeletePcTrieNode	pc_trie.c	/^TcError DeletePcTrieNode(pc_Trie *pcTrie, int index) {$/;"	f
Dp_Lookup	interface.c	/^FlashError Dp_Lookup(sFlashtable* flashtable, int width, const char* search, sLpResult *lpresult)$/;"	f
ECCReg_START_ADDR	common/inc/defines.h	148;"	d
ECC_REG_ADDRESS	common/inc/defines.h	167;"	d
ECC_REG_ADDR_BIT_CNT	common/inc/defines.h	162;"	d
ECC_REG_ADDR_START	common/inc/defines.h	161;"	d
ECC_REG_FLAG_BIT_CNT	common/inc/defines.h	158;"	d
ECC_REG_FLAG_DED	common/inc/defines.h	170;"	d
ECC_REG_FLAG_NONE	common/inc/defines.h	168;"	d
ECC_REG_FLAG_SEC	common/inc/defines.h	169;"	d
ECC_REG_FLAG_START	common/inc/defines.h	157;"	d
ECC_REG_MEMTYPE_BIT_CNT	common/inc/defines.h	160;"	d
ECC_REG_MEMTYPE_START	common/inc/defines.h	159;"	d
ECC_REG_MODULE_BIT_CNT	common/inc/defines.h	164;"	d
ECC_REG_MODULE_START	common/inc/defines.h	163;"	d
ECC_REG_WIDTH	common/inc/defines.h	165;"	d
EccAppend	utils.c	/^TcError EccAppend(void* buffer, int bufferSize , int* pWidth)$/;"	f
EccBitCount	utils.c	/^static int EccBitCount(int width)$/;"	f	file:
EccPriority	utils.c	/^TcError EccPriority(u8 memType, u8 module, int* priority)$/;"	f
EccRegCheckAndUpdate	utils.c	/^TcError EccRegCheckAndUpdate(void* buffer, int bufferSize, u8 newFlag, u8 newModule, u16 newAddr, u8 newMemType, u8 isModuleSignificant, int* isUpDated)$/;"	f
EccRegRead	utils.c	/^TcError EccRegRead(const void* buffer, int bufferSize, u8 *module, u16 *address, u8* memType, u8* flag)$/;"	f
EccRegReset	utils.c	/^TcError EccRegReset(void* buffer, int bufferSize)$/;"	f
EccRegWrite	utils.c	/^TcError EccRegWrite(void* buffer, int bufferSize, u8 module, u16 address, u8 memType, u8 flag)$/;"	f
EccWidth	utils.c	/^int EccWidth(int dataWidth)$/;"	f
FILE_NAME_LENGTH	common/inc/defines.h	21;"	d
FREAD_BUFFER	Io.c	53;"	d	file:
FREAD_FIELD	Io.c	34;"	d	file:
FWRITE_BUFFER	Io.c	27;"	d	file:
FWRITE_FIELD	Io.c	12;"	d	file:
FirstAvailableLocation	common/inc/pc_trie.h	/^	int FirstAvailableLocation;$/;"	m	struct:bitMap
FlashError	common/inc/ftrie.h	/^typedef int  FlashError;$/;"	t
FlashError	common/inc/interface.h	/^typedef int                                 FlashError;$/;"	t
FlashRecord_Create	interface.c	/^FlashError FlashRecord_Create(sFlashrecord** fRecord){$/;"	f
FlashRecord_Destory	interface.c	/^void* FlashRecord_Destory(sFlashrecord* flashrecord)$/;"	f
FlashTable_Create	interface.c	/^FlashError FlashTable_Create( sFlashtable** fTable) {$/;"	f
FlashTable_Destory	interface.c	/^void* FlashTable_Destory(sFlashtable* fTable) {$/;"	f
FlashTable_Record_Add	interface.c	/^FlashError FlashTable_Record_Add(sFlashtable* flashtable, sFlashrecord* flashrecord, int id)$/;"	f
FlashTable_Record_Get	interface.c	/^sFlashrecord* FlashTable_Record_Get(sFlashtable* flashtable, int id)$/;"	f
FlashTable_Record_Rm	interface.c	/^FlashError FlashTable_Record_Rm(sFlashtable* flashtable, int id )$/;"	f
GetNHITableLocation	pc_trie.c	/^TcError GetNHITableLocation(pc_Trie *pcTrie, NHITableEntry **NHITableIndex)$/;"	f
HEX_COUNT	common/inc/utils.h	17;"	d
INCLUDEDIR	makefile	/^		INCLUDEDIR := $(INCLUDEDIR)\\$/;"	m
IO_ADWIDTH_BIT_COUNT	common/inc/IoCmd.h	113;"	d
IO_ADWIDTH_BYTE_COUNT	common/inc/IoCmd.h	114;"	d
IO_ADWIDTH_PER_CHANNEL_BIT_COUNT	common/inc/IoCmd.h	112;"	d
IO_AD_BIT_COUNT	common/inc/IoCmd.h	109;"	d
IO_AD_BYTE_COUNT	common/inc/IoCmd.h	110;"	d
IO_AD_PER_CHANNEL_BIT_COUNT	common/inc/IoCmd.h	107;"	d
IO_AD_PER_CHANNEL_BYTE_COUNT	common/inc/IoCmd.h	108;"	d
IO_CMT_NSELIB	common/inc/IoCmd.h	140;"	d
IO_CMT_NSELIB_DATA_END	common/inc/IoCmd.h	150;"	d
IO_CMT_NSELIB_DATA_START	common/inc/IoCmd.h	149;"	d
IO_CMT_ONLINE_ADD_REC	common/inc/IoCmd.h	143;"	d
IO_CMT_ONLINE_ADD_TABLE	common/inc/IoCmd.h	145;"	d
IO_CMT_ONLINE_DEL_REC	common/inc/IoCmd.h	142;"	d
IO_CMT_ONLINE_DEL_TABLE	common/inc/IoCmd.h	144;"	d
IO_CMT_ONLINE_SPLIT_ADD_REC	common/inc/IoCmd.h	141;"	d
IO_CMT_STRING	common/inc/IoCmd.h	146;"	d
IO_CMT_STRING_MAX	common/inc/IoCmd.h	100;"	d
IO_DATA_SIZE_BIT_COUNT	common/inc/IoCmd.h	88;"	d
IO_DATA_SIZE_BYTE_COUNT	common/inc/IoCmd.h	89;"	d
IO_DATA_SIZE_HEX_COUNT	common/inc/IoCmd.h	90;"	d
IO_DBG_LC_INPUT	common/inc/IoCmd.h	135;"	d
IO_DBG_LC_LPMAD	common/inc/IoCmd.h	139;"	d
IO_DBG_LC_OUTPUT	common/inc/IoCmd.h	136;"	d
IO_DBG_LD3	common/inc/IoCmd.h	137;"	d
IO_DBG_NFE	common/inc/IoCmd.h	134;"	d
IO_KEY_MAX_SIZE_BIT_COUNT	common/inc/IoCmd.h	95;"	d
IO_KEY_MAX_SIZE_BYTE_COUNT	common/inc/IoCmd.h	96;"	d
IO_KEY_MAX_SIZE_HEX_COUNT	common/inc/IoCmd.h	97;"	d
IO_KEY_MIN_SIZE_BIT_COUNT	common/inc/IoCmd.h	92;"	d
IO_KEY_MIN_SIZE_BYTE_COUNT	common/inc/IoCmd.h	93;"	d
IO_MAGIC_NUMBER	Io.c	7;"	d	file:
IO_MDIO	common/inc/IoCmd.h	138;"	d
IO_MDIO_READ_OP	common/inc/IoCmd.h	126;"	d
IO_MDIO_WAIT_OP	common/inc/IoCmd.h	125;"	d
IO_MDIO_WRITE_OP	common/inc/IoCmd.h	124;"	d
IO_NFE_TYPE_ACL	common/inc/IoCmd.h	120;"	d
IO_NFE_TYPE_LPM	common/inc/IoCmd.h	121;"	d
IO_NFE_TYPE_QUIET	common/inc/IoCmd.h	122;"	d
IO_NFE_XOR_MASK_BIT_COUNT	common/inc/IoCmd.h	116;"	d
IO_NFE_XOR_MASK_BYTE_COUNT	common/inc/IoCmd.h	117;"	d
IO_NFE_XOR_MASK_HEX_COUNT	common/inc/IoCmd.h	118;"	d
IO_OPCODE_INVALID	common/inc/IoCmd.h	147;"	d
IO_OPCODE_LC	common/inc/IoCmd.h	129;"	d
IO_OPCODE_LD2	common/inc/IoCmd.h	130;"	d
IO_OPCODE_LD3	common/inc/IoCmd.h	131;"	d
IO_OPCODE_LD5	common/inc/IoCmd.h	132;"	d
IO_OPCODE_NOP	common/inc/IoCmd.h	128;"	d
IO_OPCODE_QUIET	common/inc/IoCmd.h	133;"	d
IO_PRIORITY_BIT_COUNT	common/inc/IoCmd.h	103;"	d
IO_PRIORITY_BYTE_COUNT	common/inc/IoCmd.h	104;"	d
IO_PRIORITY_CHANNEL_COUNT	common/inc/IoCmd.h	101;"	d
IO_PRIORITY_HEX_COUNT	common/inc/IoCmd.h	105;"	d
IO_PRIORITY_PER_CHANNEL_BIT_COUNT	common/inc/IoCmd.h	102;"	d
IO_TABLE_NAME_BYTE_COUNT	common/inc/IoCmd.h	99;"	d
IO_TYPE_INPUT	Io.c	9;"	d	file:
IO_TYPE_OUPUT	Io.c	10;"	d	file:
IO_VERSION_NUMBER	Io.c	8;"	d	file:
IS_2POWER	common/inc/utils.h	18;"	d
Index	common/inc/pc_trie.h	/^	NHITableEntry* Index[1 << (PC_TRIE_BITS - COMPRESS_LYAER_NUMBER+1)];$/;"	m	struct:bitMap
InitLpmModuleSet	pc_trie.c	/^TcError InitLpmModuleSet(NHIModuleSet** LpmModuleSet) {$/;"	f
InsertPcTrieNode	pc_trie.c	/^TcError InsertPcTrieNode(pc_Trie *pcTrie, pc_TrieNode *pcTrieNode)$/;"	f
Io	common/inc/Io.h	/^typedef struct sIo Io;$/;"	t	typeref:struct:sIo
IoCmd	common/inc/IoCmd.h	/^typedef struct sIoCmd IoCmd;$/;"	t	typeref:struct:sIoCmd
IoCmd_Copy	IoCmd.c	/^void IoCmd_Copy(IoCmd* dst, const IoCmd* src)$/;"	f
IoCmd_Create	IoCmd.c	/^IoCmd* IoCmd_Create(void)$/;"	f
IoCmd_CreateCopy	IoCmd.c	/^IoCmd* IoCmd_CreateCopy(const IoCmd* cmd)$/;"	f
IoCmd_Destroy	IoCmd.c	/^void IoCmd_Destroy(IoCmd* cmd)$/;"	f
IoCmd_Get_Cmt_NseLib	IoCmd.c	/^TcError IoCmd_Get_Cmt_NseLib(const IoCmd* cmd, u8* pData)$/;"	f
IoCmd_Get_Cmt_OnlineAddRecord	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineAddRecord(const IoCmd* cmd, const char** ppTableName, u32* pPriority)$/;"	f
IoCmd_Get_Cmt_OnlineAddTable	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineAddTable(const IoCmd* cmd, const char** tableName, u32* pId)$/;"	f
IoCmd_Get_Cmt_OnlineDeleteRecord	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineDeleteRecord(const IoCmd* cmd, const char** ppTableName, u32* pPriority)$/;"	f
IoCmd_Get_Cmt_OnlineDeleteTable	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineDeleteTable(const IoCmd* cmd, const char** tableName, u32* pId)$/;"	f
IoCmd_Get_Cmt_OnlineRecord	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineRecord(const IoCmd* cmd, const char** ppTableName, u32* pPriority)$/;"	f
IoCmd_Get_Cmt_OnlineSplitAddRecord	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineSplitAddRecord(const IoCmd* cmd, const char** ppTableName, u32* pPriority)$/;"	f
IoCmd_Get_Cmt_OnlineTable	IoCmd.c	/^TcError IoCmd_Get_Cmt_OnlineTable(const IoCmd* cmd, const char** ppTableName, u32* pId)$/;"	f
IoCmd_Get_Cmt_String	IoCmd.c	/^TcError IoCmd_Get_Cmt_String(const IoCmd* cmd, const char** str, u8* pLen)$/;"	f
IoCmd_Get_DBG_LC_Input	IoCmd.c	/^TcError IoCmd_Get_DBG_LC_Input(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize, $/;"	f
IoCmd_Get_DBG_LC_LpmAD	IoCmd.c	/^TcError IoCmd_Get_DBG_LC_LpmAD(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize, $/;"	f
IoCmd_Get_DBG_LC_Output	IoCmd.c	/^TcError IoCmd_Get_DBG_LC_Output(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize, $/;"	f
IoCmd_Get_DBG_LD3	IoCmd.c	/^TcError IoCmd_Get_DBG_LD3(const IoCmd* cmd, u8* pDev, u32* pAddress, const void** ppData, int* pDataSize )$/;"	f
IoCmd_Get_DBG_NFE	IoCmd.c	/^TcError IoCmd_Get_DBG_NFE(const IoCmd* cmd, u8* pDev, u8* pOctopus, u8* pModule, u8* pMemType, u8* pType, const void** ppXorMask, int* pXorMaskSize)$/;"	f
IoCmd_Get_LC	IoCmd.c	/^TcError IoCmd_Get_LC(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize)$/;"	f
IoCmd_Get_LD2	IoCmd.c	/^TcError IoCmd_Get_LD2(const IoCmd* cmd, u8* pDev, const void** ppData, int* pDataSize)$/;"	f
IoCmd_Get_LD3	IoCmd.c	/^TcError IoCmd_Get_LD3(const IoCmd* cmd, u8* pDev, u32* pAddress)$/;"	f
IoCmd_Get_LD5	IoCmd.c	/^TcError IoCmd_Get_LD5(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize)$/;"	f
IoCmd_Get_LD5_LC	IoCmd.c	/^TcError IoCmd_Get_LD5_LC(const IoCmd* cmd, u8* pProfile, u16* pSbAddr, u8* pWidth, const void** ppKey, int* pKeySize)$/;"	f
IoCmd_Get_MDIO	IoCmd.c	/^TcError IoCmd_Get_MDIO(const IoCmd* cmd, u8* operation, u8* pMpid, u8* pDevAddr, u16* pRegAddr, u16* pRegData)$/;"	f
IoCmd_Get_Nop	IoCmd.c	/^TcError IoCmd_Get_Nop(const IoCmd* cmd, u16* pCnt)$/;"	f
IoCmd_Get_OpCode	IoCmd.c	/^TcError IoCmd_Get_OpCode(const IoCmd* cmd, u8* pOpCode)$/;"	f
IoCmd_Name	IoCmd.c	/^const char* IoCmd_Name(const IoCmd* cmd)$/;"	f
IoCmd_OpCode_Get	IoCmd.c	/^TcError IoCmd_OpCode_Get(const IoCmd* cmd, u8* pOpcode)$/;"	f
IoCmd_Opcode_Name	IoCmd.c	/^const char* IoCmd_Opcode_Name(u8 opcode)$/;"	f
IoCmd_Set_Cmt_NseLib	IoCmd.c	/^TcError IoCmd_Set_Cmt_NseLib(IoCmd* cmd, const u8* pData)$/;"	f
IoCmd_Set_Cmt_OnlineAddRecord	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineAddRecord(IoCmd* cmd, const char* tableName, const u32* pPriority)$/;"	f
IoCmd_Set_Cmt_OnlineAddTable	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineAddTable(IoCmd* cmd, const char* tableName, const u32* pId)$/;"	f
IoCmd_Set_Cmt_OnlineDeleteRecord	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineDeleteRecord(IoCmd* cmd, const char* tableName, const u32* pPriority)$/;"	f
IoCmd_Set_Cmt_OnlineDeleteTable	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineDeleteTable(IoCmd* cmd, const char* tableName, const u32* pId)$/;"	f
IoCmd_Set_Cmt_OnlineRecord	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineRecord(IoCmd* cmd, const u8* pOpCode, const char* tableName, const u32* pPriority)$/;"	f
IoCmd_Set_Cmt_OnlineSplitAddRecord	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineSplitAddRecord(IoCmd* cmd, const char* tableName, const u32* pPriority)$/;"	f
IoCmd_Set_Cmt_OnlineTable	IoCmd.c	/^TcError IoCmd_Set_Cmt_OnlineTable(IoCmd* cmd, const u8* pOpCode, const char* tableName, const u32* pId)$/;"	f
IoCmd_Set_Cmt_String	IoCmd.c	/^TcError IoCmd_Set_Cmt_String(IoCmd* cmd, const char* fmt, ...)$/;"	f
IoCmd_Set_DBG_LC_Input	IoCmd.c	/^TcError IoCmd_Set_DBG_LC_Input(IoCmd* cmd, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize, $/;"	f
IoCmd_Set_DBG_LC_LpmAD	IoCmd.c	/^TcError IoCmd_Set_DBG_LC_LpmAD(IoCmd* cmd, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize, $/;"	f
IoCmd_Set_DBG_LC_Output	IoCmd.c	/^TcError IoCmd_Set_DBG_LC_Output(IoCmd* cmd, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize, $/;"	f
IoCmd_Set_DBG_LD3	IoCmd.c	/^TcError IoCmd_Set_DBG_LD3(IoCmd* cmd, const u8* pDev, const u32* pAddress, const void* data, int dataSize )$/;"	f
IoCmd_Set_DBG_NFE	IoCmd.c	/^TcError IoCmd_Set_DBG_NFE(IoCmd* cmd, const u8* pDev, const u8* pOctopus, const u8* pModule, const u8* pMemType, const u8* pType, const void* xorMask, int xorMaskSize)$/;"	f
IoCmd_Set_LC	IoCmd.c	/^TcError IoCmd_Set_LC(IoCmd* cmd, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize)$/;"	f
IoCmd_Set_LD2	IoCmd.c	/^TcError IoCmd_Set_LD2(IoCmd* cmd, const u8* pDev, const void* data, int dataSize)$/;"	f
IoCmd_Set_LD3	IoCmd.c	/^TcError IoCmd_Set_LD3(IoCmd* cmd, const u8* pDev, const u32* pAddress)$/;"	f
IoCmd_Set_LD5	IoCmd.c	/^TcError IoCmd_Set_LD5(IoCmd* cmd, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize)$/;"	f
IoCmd_Set_LD5_LC	IoCmd.c	/^static TcError IoCmd_Set_LD5_LC(IoCmd* cmd, u8 opCode, const u8* pProfile, const u16* pSbAddr, const u8* pWidth, const void* key, int keySize)$/;"	f	file:
IoCmd_Set_MDIO	IoCmd.c	/^TcError IoCmd_Set_MDIO(IoCmd* cmd, const u8* operation, const u8* pMpid, const u8* pDevAddr, const u16* pRegAddr, const u16* pRegData)$/;"	f
IoCmd_Set_Nop	IoCmd.c	/^TcError IoCmd_Set_Nop(IoCmd* cmd, const u16* pCnt)$/;"	f
IoCmd_Set_Quiet	IoCmd.c	/^TcError IoCmd_Set_Quiet(IoCmd* cmd)$/;"	f
IoCmd_Size	IoCmd.c	/^int IoCmd_Size()$/;"	f
IoCmd_ValidateOpcode	IoCmd.c	/^static TcError IoCmd_ValidateOpcode(const IoCmd* cmd, u8 opcode)$/;"	f	file:
IoCmd_isInitialized	IoCmd.c	/^u8 IoCmd_isInitialized(const IoCmd* cmd)$/;"	f
Io_Close	Io.c	/^void Io_Close(Io* io)$/;"	f
Io_Input_Open	Io.c	/^TcError Io_Input_Open(const char* fn, Io** pIo)$/;"	f
Io_Input_Reset	Io.c	/^TcError Io_Input_Reset(Io* io)$/;"	f
Io_IoCmd_Read	Io.c	/^TcError Io_IoCmd_Read(Io* io, IoCmd* cmd)$/;"	f
Io_IoCmd_Write	Io.c	/^TcError Io_IoCmd_Write(Io* io, const IoCmd* cmd)$/;"	f
Io_Output_Open	Io.c	/^TcError Io_Output_Open(const char* fn, Io** pIo)$/;"	f
Io_Private_Read_OpcodeAndSeqNumber	Io.c	/^static TcError Io_Private_Read_OpcodeAndSeqNumber(Io* io)$/;"	f	file:
Io_Read_Cmt_NseLib	Io.c	/^TcError Io_Read_Cmt_NseLib(Io* io, u8* pCmnData)$/;"	f
Io_Read_Cmt_OnlineAddRecord	Io.c	/^TcError Io_Read_Cmt_OnlineAddRecord(Io* io, char* tableName, int tableNameSize,  u32* pPriority)$/;"	f
Io_Read_Cmt_OnlineAddTable	Io.c	/^TcError Io_Read_Cmt_OnlineAddTable(Io* io, char* tableName, int tableNameSize,  u32* pId)$/;"	f
Io_Read_Cmt_OnlineDeleteRecord	Io.c	/^TcError Io_Read_Cmt_OnlineDeleteRecord(Io* io, char* tableName, int tableNameSize,  u32* pPriority)$/;"	f
Io_Read_Cmt_OnlineDeleteTable	Io.c	/^TcError Io_Read_Cmt_OnlineDeleteTable(Io* io, char* tableName, int tableNameSize,  u32* pId)$/;"	f
Io_Read_Cmt_OnlineRecord	Io.c	/^static TcError Io_Read_Cmt_OnlineRecord(Io* io, char* tableName, int tableNameSize, u32* pPriority)$/;"	f	file:
Io_Read_Cmt_OnlineSplitAddRecord	Io.c	/^TcError Io_Read_Cmt_OnlineSplitAddRecord(Io* io, char* tableName, int tableNameSize,  u32* pPriority)$/;"	f
Io_Read_Cmt_OnlineTable	Io.c	/^TcError Io_Read_Cmt_OnlineTable(Io* io, char* tableName, int tableNameSize,  u32* pId)$/;"	f
Io_Read_Cmt_String	Io.c	/^TcError Io_Read_Cmt_String(Io* io, char* str, u8* pLen)$/;"	f
Io_Read_DBG_LC_Input	Io.c	/^TcError Io_Read_DBG_LC_Input(Io* io, u8* pProfile, u16* pSbAddr, u8* pWidth, void* key, int keySize, $/;"	f
Io_Read_DBG_LC_Output	Io.c	/^TcError Io_Read_DBG_LC_Output(Io* io, u8* pProfile, u16* pSbAddr, u8* pWidth, void* key, int keySize, $/;"	f
Io_Read_DBG_LD3	Io.c	/^TcError Io_Read_DBG_LD3(Io* io, u8* pDev, u32* pAddress, void* data, int dataSize )$/;"	f
Io_Read_DBG_NFE	Io.c	/^TcError Io_Read_DBG_NFE(Io* io, u8* pDev, u8* pOctopus, u8* pModule, u8* pMemType, u8* pType, void* xorMask, int xorMaskSize)$/;"	f
Io_Read_LC	Io.c	/^TcError Io_Read_LC(Io* io, u8* pProfile, u16* pSbAddr, u8* pWidth, void* data, int dataSize)$/;"	f
Io_Read_LD2	Io.c	/^TcError Io_Read_LD2(Io* io, u8* pDev, void* data, int dataSize)$/;"	f
Io_Read_LD3	Io.c	/^TcError Io_Read_LD3(Io* io, u8* pDev, u32* pAddress)$/;"	f
Io_Read_LD5	Io.c	/^TcError Io_Read_LD5(Io* io, u8* pProfile, u16* pSbAddr, u8* pKeySize, void* data, int dataSize)$/;"	f
Io_Read_LD5_LC	Io.c	/^static TcError Io_Read_LD5_LC(Io* io, u8* pProfile, u16* pSbAddr, u8* pWidth, void* key, int keySize)$/;"	f	file:
Io_Read_MDIO	Io.c	/^TcError Io_Read_MDIO(Io* io, u8* operation, u8* mpid, u8* devAddr, u16* regAddr, u16* regData)$/;"	f
Io_Read_Magic	Io.c	/^API int Io_Read_Magic(Io* io, u32* pMagic)$/;"	f
Io_Read_Nop	Io.c	/^TcError Io_Read_Nop(Io* io, u16* pCnt)$/;"	f
Io_Read_OpCode	Io.c	/^TcError Io_Read_OpCode(Io* io, u8* pOpCode)$/;"	f
Io_Read_Quiet	Io.c	/^TcError Io_Read_Quiet(Io* io)$/;"	f
Io_Read_SeqNumber	Io.c	/^API TcError Io_Read_SeqNumber(Io* io, u32* pSeqNumber)$/;"	f
Io_Read_Version	Io.c	/^API int Io_Read_Version(Io* io, u32* pVersion)$/;"	f
Io_Write_Cmt_NseLib	Io.c	/^TcError Io_Write_Cmt_NseLib(Io* io, u8 cmnData)$/;"	f
Io_Write_Cmt_OnlineAddRecord	Io.c	/^TcError Io_Write_Cmt_OnlineAddRecord(Io* io, const char* tableName, u32 priority)$/;"	f
Io_Write_Cmt_OnlineAddTable	Io.c	/^TcError Io_Write_Cmt_OnlineAddTable(Io* io, const char* tableName, u32 id)$/;"	f
Io_Write_Cmt_OnlineDeleteRecord	Io.c	/^TcError Io_Write_Cmt_OnlineDeleteRecord(Io* io, const char* tableName, u32 priority)$/;"	f
Io_Write_Cmt_OnlineDeleteTable	Io.c	/^TcError Io_Write_Cmt_OnlineDeleteTable(Io* io, const char* tableName, u32 id)$/;"	f
Io_Write_Cmt_OnlineRecord	Io.c	/^TcError Io_Write_Cmt_OnlineRecord(Io* io, u8 opCode, const char* tableName, u32 priority)$/;"	f
Io_Write_Cmt_OnlineSplitAddRecord	Io.c	/^TcError Io_Write_Cmt_OnlineSplitAddRecord(Io* io, const char* tableName, u32 priority)$/;"	f
Io_Write_Cmt_OnlineTable	Io.c	/^TcError Io_Write_Cmt_OnlineTable(Io* io, u8 opCode, const char* tableName, u32 id)$/;"	f
Io_Write_Cmt_String	Io.c	/^TcError Io_Write_Cmt_String(Io* io, const char* str, u8 len)$/;"	f
Io_Write_DBG_LC_Input	Io.c	/^TcError Io_Write_DBG_LC_Input(Io* io, u8 profile, u16 sbAddr, u8 width, const void* key, int keySize, $/;"	f
Io_Write_DBG_LC_Output	Io.c	/^TcError Io_Write_DBG_LC_Output(Io* io, u8 profile, u16 sbAddr, u8 width, const void* key, int keySize, $/;"	f
Io_Write_DBG_LD3	Io.c	/^TcError Io_Write_DBG_LD3(Io* io, u8 dev, u32 address, const void* data, int dataSize )$/;"	f
Io_Write_DBG_NFE	Io.c	/^TcError Io_Write_DBG_NFE(Io* io, u8 dev, u8 octopus, u8 module, u8 memType, u8 type, const void* xorMask, int xorMaskSize)$/;"	f
Io_Write_LC	Io.c	/^TcError Io_Write_LC(Io* io, u8 profile, u16 sbAddr, u8 width, const void* key, int keySize)$/;"	f
Io_Write_LD2	Io.c	/^TcError Io_Write_LD2(Io* io, u8 dev, const void* data, int dataSize)$/;"	f
Io_Write_LD3	Io.c	/^TcError Io_Write_LD3(Io* io, u8 dev, u32 address)$/;"	f
Io_Write_LD5	Io.c	/^TcError Io_Write_LD5(Io* io, u8 profile, u16 sbAddr, u8 width, const void* key, int keySize)$/;"	f
Io_Write_LD5_LC	Io.c	/^TcError Io_Write_LD5_LC(Io* io, u8 opCode, u8 profile, u16 sbAddr, u8 width, const void* key, int keySize)$/;"	f
Io_Write_MDIO	Io.c	/^TcError Io_Write_MDIO(Io* io, u8 operation, u8 mpid, u8 devAddr, u16 regAddr, u16 regData)$/;"	f
Io_Write_Nop	Io.c	/^TcError Io_Write_Nop(Io* io, u16 cnt)$/;"	f
Io_Write_Quiet	Io.c	/^API TcError Io_Write_Quiet(Io* io)$/;"	f
Io_Write_SeqNumber	Io.c	/^static TcError Io_Write_SeqNumber(Io* io)$/;"	f	file:
IsChildFull	pc_trie.c	/^int IsChildFull(pc_Trie *pcTrie, int index) {$/;"	f
KGU_KEYS	common/inc/defines.h	33;"	d
KGU_KEY_WIDTH_IN_CHARS	common/inc/defines.h	127;"	d
LC_CHANNEL_PRIORITY_BIT_CNT	common/inc/defines.h	151;"	d
LD_CMD_ECC_BIT_COUNT	common/inc/defines.h	41;"	d
LD_CMD_LD_BIT_COUNT	common/inc/defines.h	40;"	d
LD_CMD_RD_ADDRESS_START	common/inc/defines.h	50;"	d
LD_CMD_RD_ADDRESS_WIDTH	common/inc/defines.h	51;"	d
LD_CMD_RD_BIT_COUNT	common/inc/defines.h	39;"	d
LD_CMD_RD_INSTANCE_SELECT_START	common/inc/defines.h	48;"	d
LD_CMD_RD_INSTANCE_SELECT_WIDTH	common/inc/defines.h	49;"	d
LD_CMD_RD_MODULE_NUMBER_START	common/inc/defines.h	42;"	d
LD_CMD_RD_MODULE_NUMBER_WIDTH	common/inc/defines.h	43;"	d
LD_CMD_RD_OCTOPUS_NUMBER_START	common/inc/defines.h	44;"	d
LD_CMD_RD_OCTOPUS_NUMBER_WIDTH	common/inc/defines.h	45;"	d
LD_CMD_RD_OPCODE	common/inc/defines.h	56;"	d
LD_CMD_RD_OPCODE_START	common/inc/defines.h	46;"	d
LD_CMD_RD_OPCODE_WIDTH	common/inc/defines.h	47;"	d
LEVEL_0_LENGTH	interface.c	9;"	d	file:
LOG_NAME	flashApp0.c	19;"	d	file:
List	common/inc/List.h	/^typedef struct sList List;$/;"	t	typeref:struct:sList
List_Buffer	List.c	/^void* List_Buffer(List* list) {$/;"	f
List_Capacity	List.c	/^int List_Capacity(List* list) {$/;"	f
List_Create	List.c	/^TcError List_Create(int capacity, int eSize, List** pList) {$/;"	f
List_Destroy	List.c	/^void List_Destroy(List* list)$/;"	f
List_Element_Add	List.c	/^TcError List_Element_Add(List* list, void** element) {$/;"	f
List_Element_AddAtIndex	List.c	/^TcError List_Element_AddAtIndex(List* list, int id, void** element) {$/;"	f
List_Element_AddAtSmallestAvailIndex	List.c	/^TcError List_Element_AddAtSmallestAvailIndex(List* list, void** element) {$/;"	f
List_Element_Count	List.c	/^int List_Element_Count(List* list) {$/;"	f
List_Element_Delete	List.c	/^TcError List_Element_Delete(List* list, void* element) {$/;"	f
List_Element_DeleteAtIndex	List.c	/^TcError List_Element_DeleteAtIndex(List* list, int index)$/;"	f
List_Element_First	List.c	/^void* List_Element_First(List* list) {$/;"	f
List_Element_Get	List.c	/^TcError List_Element_Get(List* list, int index, void** element) {$/;"	f
List_Element_Index	List.c	/^int List_Element_Index(List* list, const void* element, int* pIndex) {$/;"	f
List_Element_Next	List.c	/^void* List_Element_Next(List* list, const void* prev) {$/;"	f
List_Element_Release	List.c	/^TcError List_Element_Release(List* list, void* element) {$/;"	f
List_Element_Validate	List.c	/^TcError List_Element_Validate(List* list, const void* element, int* pIndex) {$/;"	f
List_Expand	List.c	/^TcError List_Expand(List* list, int increase) {$/;"	f
List_IsEmpty_At	List.c	/^int List_IsEmpty_At(List* list, int index) {$/;"	f
List_IsValid_At	List.c	/^int List_IsValid_At(List* list, int index)$/;"	f
MASK	common/inc/utils.h	13;"	d
MAX_BYTES	common/inc/defines.h	37;"	d
MAX_CASCADE_DEVICES	common/inc/defines.h	19;"	d
MAX_CHANNELS	common/inc/defines.h	18;"	d
MAX_CHARS	common/inc/defines.h	32;"	d
MAX_PROFILES	common/inc/defines.h	16;"	d
MAX_PROFILES_IN_BIT	common/inc/defines.h	15;"	d
MAX_READ_BITS	common/inc/defines.h	38;"	d
MAX_SBADDR	common/inc/defines.h	17;"	d
MOD_PER_OCT	common/inc/defines.h	28;"	d
MemType	common/inc/TcTypes.h	/^} MemType;$/;"	t	typeref:enum:eMemType
MemTypeBsRegister	common/inc/TcTypes.h	/^    MemTypeBsRegister               = 42,$/;"	e	enum:eMemType
MemTypeCount	common/inc/TcTypes.h	/^    MemTypeCount$/;"	e	enum:eMemType
MemTypeDram1	common/inc/TcTypes.h	/^    MemTypeDram1                    = 1,$/;"	e	enum:eMemType
MemTypeDram40	common/inc/TcTypes.h	/^    MemTypeDram40                   = 40,$/;"	e	enum:eMemType
MemTypeHRamOffRegister	common/inc/TcTypes.h	/^    MemTypeHRamOffRegister          = 43,$/;"	e	enum:eMemType
MemTypeHashRam	common/inc/TcTypes.h	/^    MemTypeHashRam                  = 41,$/;"	e	enum:eMemType
MemTypeKguProfile0	common/inc/TcTypes.h	/^    MemTypeKguProfile0              = 59,  $/;"	e	enum:eMemType
MemTypeKguProfile1	common/inc/TcTypes.h	/^    MemTypeKguProfile1              = 60,  $/;"	e	enum:eMemType
MemTypeNone	common/inc/TcTypes.h	/^    MemTypeNone                     = 0,$/;"	e	enum:eMemType
MemTypePriorityRam	common/inc/TcTypes.h	/^    MemTypePriorityRam              = 44,$/;"	e	enum:eMemType
MemTypeProfile	common/inc/TcTypes.h	/^    MemTypeProfile                  = 49,$/;"	e	enum:eMemType
MemTypeRamReadRegister	common/inc/TcTypes.h	/^    MemTypeRamReadRegister          = 63,$/;"	e	enum:eMemType
MemTypeRangeEncoderRegister0	common/inc/TcTypes.h	/^    MemTypeRangeEncoderRegister0    = 61,  $/;"	e	enum:eMemType
MemTypeRangeEncoderRegister1	common/inc/TcTypes.h	/^    MemTypeRangeEncoderRegister1    = 62,  $/;"	e	enum:eMemType
MemTypeSearchBuffer0	common/inc/TcTypes.h	/^    MemTypeSearchBuffer0            = 57,$/;"	e	enum:eMemType
MemTypeSearchBuffer1	common/inc/TcTypes.h	/^    MemTypeSearchBuffer1            = 58,$/;"	e	enum:eMemType
MemTypeXcCtrlRegister	common/inc/TcTypes.h	/^    MemTypeXcCtrlRegister           = 50,$/;"	e	enum:eMemType
MemTypeXcRam	common/inc/TcTypes.h	/^    MemTypeXcRam                    = 47,$/;"	e	enum:eMemType
MemType_name	utils.c	/^const char* MemType_name(u8 type)$/;"	f
NHIModuleSet	common/inc/pc_trie.h	/^}NHIModuleSet;$/;"	t	typeref:struct:sNHIModuleSet
NHITable	common/inc/pc_trie.h	/^	NHITableEntry* NHITable;$/;"	m	struct:bitMap
NHITableEntry	common/inc/pc_trie.h	/^}NHITableEntry;$/;"	t	typeref:struct:sNHITableEntry
OBJS	makefile	/^		OBJS = $(addsuffix .o, $(TEMP))$/;"	m
ON_BE_SWAP16	common/inc/utils.h	41;"	d
ON_BE_SWAP16	common/inc/utils.h	48;"	d
ON_BE_SWAP32	common/inc/utils.h	42;"	d
ON_BE_SWAP32	common/inc/utils.h	49;"	d
ON_BE_SWAP64	common/inc/utils.h	43;"	d
ON_BE_SWAP64	common/inc/utils.h	50;"	d
ON_LE_SWAP16	common/inc/utils.h	44;"	d
ON_LE_SWAP16	common/inc/utils.h	51;"	d
ON_LE_SWAP32	common/inc/utils.h	45;"	d
ON_LE_SWAP32	common/inc/utils.h	52;"	d
ON_LE_SWAP64	common/inc/utils.h	46;"	d
ON_LE_SWAP64	common/inc/utils.h	53;"	d
PCTRIE_LENGTH	interface.c	10;"	d	file:
PC_MOUDLE_COUNT	common/inc/pc_trie.h	10;"	d
PC_MOUDLE_SIZE	common/inc/pc_trie.h	9;"	d
PC_TOTAL_SIZE	common/inc/pc_trie.h	8;"	d
PC_TRIE_BITS	common/inc/pc_trie.h	6;"	d
PORT_CNT	common/inc/defines.h	177;"	d
Q_BPCNTR_REG_BYTECNTR_START	common/inc/defines.h	120;"	d
Q_BPCNTR_REG_BYTECNTR_WIDTH	common/inc/defines.h	121;"	d
Q_BPCNTR_REG_PACKETCNTR_START	common/inc/defines.h	118;"	d
Q_BPCNTR_REG_PACKETCNTR_WIDTH	common/inc/defines.h	119;"	d
Q_BP_MODULE_BYTECNTR_START	common/inc/defines.h	116;"	d
Q_BP_MODULE_BYTECNTR_WIDTH	common/inc/defines.h	117;"	d
Q_BP_MODULE_PACKETCNTR_START	common/inc/defines.h	114;"	d
Q_BP_MODULE_PACKETCNTR_WIDTH	common/inc/defines.h	115;"	d
Q_ECC_ADDRESS_BIT_COUNT	common/inc/defines.h	184;"	d
Q_ECC_ADDRESS_START	common/inc/defines.h	183;"	d
Q_ECC_ERROR_BIT_COUNT	common/inc/defines.h	180;"	d
Q_ECC_ERROR_START	common/inc/defines.h	179;"	d
Q_ECC_ISEL_BIT_COUNT	common/inc/defines.h	182;"	d
Q_ECC_ISEL_START	common/inc/defines.h	181;"	d
Q_ECC_WIDTH	common/inc/defines.h	185;"	d
Q_MODCONFIG_TCAM_MReg_Bitcnt	common/inc/defines.h	86;"	d
Q_MODCONFIG_TCAM_MReg_START	common/inc/defines.h	85;"	d
Q_MODCONFIG_TCAM_NReg_Bitcnt	common/inc/defines.h	84;"	d
Q_MODCONFIG_TCAM_NReg_START	common/inc/defines.h	83;"	d
Q_MODCONFIG_TCAM_NX_REG_Bitcnt	common/inc/defines.h	72;"	d
Q_MODCONFIG_TCAM_NX_REG_Start	common/inc/defines.h	71;"	d
Q_MODCONFIG_TCAM_OrMask_Bitcnt	common/inc/defines.h	78;"	d
Q_MODCONFIG_TCAM_OrMask_START	common/inc/defines.h	77;"	d
Q_MODCONFIG_TCAM_Tcam_Invalid_Bitcnt	common/inc/defines.h	82;"	d
Q_MODCONFIG_TCAM_Tcam_Invalid_START	common/inc/defines.h	81;"	d
Q_MODCONFIG_TCAM_ValidBit_A_Bitcnt	common/inc/defines.h	76;"	d
Q_MODCONFIG_TCAM_ValidBit_A_START	common/inc/defines.h	75;"	d
Q_MODCONFIG_TCAM_ValidBit_B_Bitcnt	common/inc/defines.h	74;"	d
Q_MODCONFIG_TCAM_ValidBit_B_START	common/inc/defines.h	73;"	d
Q_MODCONFIG_TCAM_hash_Direct_Bitcnt	common/inc/defines.h	80;"	d
Q_MODCONFIG_TCAM_hash_Direct_START	common/inc/defines.h	79;"	d
Q_PROFILE_REG_AD_Width_Bitcnt	common/inc/defines.h	99;"	d
Q_PROFILE_REG_AD_Width_Start	common/inc/defines.h	98;"	d
Q_PROFILE_REG_BYTE_PACKET_CNTR_RST_EN_Bitcnt	common/inc/defines.h	105;"	d
Q_PROFILE_REG_BYTE_PACKET_CNTR_RST_EN_START	common/inc/defines.h	104;"	d
Q_PROFILE_REG_MODULE0_Mode_Bitcnt	common/inc/defines.h	91;"	d
Q_PROFILE_REG_MODULE0_Mode_START	common/inc/defines.h	90;"	d
Q_PROFILE_REG_MODULE1_Mode_Bitcnt	common/inc/defines.h	93;"	d
Q_PROFILE_REG_MODULE1_Mode_START	common/inc/defines.h	92;"	d
Q_PROFILE_REG_MODULE2_Mode_Bitcnt	common/inc/defines.h	95;"	d
Q_PROFILE_REG_MODULE2_Mode_START	common/inc/defines.h	94;"	d
Q_PROFILE_REG_MODULE3_Mode_Bitcnt	common/inc/defines.h	97;"	d
Q_PROFILE_REG_MODULE3_Mode_START	common/inc/defines.h	96;"	d
Q_PROFILE_REG_MODULE_AD	common/inc/defines.h	108;"	d
Q_PROFILE_REG_MODULE_BYTCNTR	common/inc/defines.h	109;"	d
Q_PROFILE_REG_MODULE_DISABLE	common/inc/defines.h	107;"	d
Q_PROFILE_REG_MODULE_LPM	common/inc/defines.h	111;"	d
Q_PROFILE_REG_MODULE_LRU	common/inc/defines.h	110;"	d
Q_PROFILE_REG_Priority_AND_Bitcnt	common/inc/defines.h	101;"	d
Q_PROFILE_REG_Priority_AND_Start	common/inc/defines.h	100;"	d
Q_PROFILE_REG_Priority_SEL_Bitcnt	common/inc/defines.h	103;"	d
Q_PROFILE_REG_Priority_SEL_Start	common/inc/defines.h	102;"	d
Q_ProfileMem_ChanSel_Bitcnt	common/inc/defines.h	65;"	d
Q_ProfileMem_ChanSel_Start	common/inc/defines.h	64;"	d
Q_ProfileMem_QuartEn_Bitcnt	common/inc/defines.h	63;"	d
Q_ProfileMem_QuartEn_Start	common/inc/defines.h	62;"	d
QuartetEccRegRead	utils.c	/^TcError QuartetEccRegRead(const void* buffer, int bufferSize, u16 *address, u8* memType, u8* flag)$/;"	f
QuartetMemType	common/inc/TcTypes.h	/^} QuartetMemType;$/;"	t	typeref:enum:eQuartetMemType
QuartetMemTypeBPCntrReg	common/inc/TcTypes.h	/^	QuartetMemTypeBPCntrReg				   = 7,$/;"	e	enum:eQuartetMemType
QuartetMemTypeCount_new	common/inc/TcTypes.h	/^    QuartetMemTypeCount_new$/;"	e	enum:eQuartetMemType
QuartetMemTypeEccStatus	common/inc/TcTypes.h	/^    QuartetMemTypeEccStatus                = 3,$/;"	e	enum:eQuartetMemType
QuartetMemTypeLRUCntrReg	common/inc/TcTypes.h	/^	QuartetMemTypeLRUCntrReg			   = 8,$/;"	e	enum:eQuartetMemType
QuartetMemTypeModuleConfigReg	common/inc/TcTypes.h	/^    QuartetMemTypeModuleConfigReg          = 1,$/;"	e	enum:eQuartetMemType
QuartetMemTypeModuleRam	common/inc/TcTypes.h	/^    QuartetMemTypeModuleRam                = 5,$/;"	e	enum:eQuartetMemType
QuartetMemTypeProfileRam	common/inc/TcTypes.h	/^    QuartetMemTypeProfileRam               = 4,$/;"	e	enum:eQuartetMemType
QuartetMemTypeProfileReg	common/inc/TcTypes.h	/^    QuartetMemTypeProfileReg               = 6,$/;"	e	enum:eQuartetMemType
QuartetMemTypeTcamReg	common/inc/TcTypes.h	/^    QuartetMemTypeTcamReg                  = 2,$/;"	e	enum:eQuartetMemType
QuartetMemType_name	utils.c	/^const char* QuartetMemType_name(u8 type)$/;"	f
S16	common/inc/types.h	/^typedef s16 S16;$/;"	t
S32	common/inc/types.h	/^typedef s32 S32;$/;"	t
S64	common/inc/types.h	/^typedef s64 S64;$/;"	t
S8	common/inc/types.h	/^typedef s8 S8;$/;"	t
SEQUENCE_NUMBER_INVALID	Io.c	60;"	d	file:
SRCS	makefile	/^		SRCS = $(C_FILES)$/;"	m
SWAP16	common/inc/utils.h	68;"	d
SWAP32	common/inc/utils.h	63;"	d
SWAP64	common/inc/utils.h	56;"	d
StrAppend	utils.c	/^TcError StrAppend(char* outStr, const int outStrSize, int* pUsed, const char* newStr)$/;"	f
TABLE_IN_FIELDS	common/inc/defines.h	34;"	d
TARGET	makefile	/^		TARGET = flashApp0$/;"	m
TEMP	makefile	/^		TEMP = $(addprefix obj\/, $(BASE))$/;"	m
TcE_Alloc_Fail_Conflict	common/inc/TcError.h	/^    TcE_Alloc_Fail_Conflict,$/;"	e	enum:TcE_Errors
TcE_Alloc_Fail_Space	common/inc/TcError.h	/^    TcE_Alloc_Fail_Space,$/;"	e	enum:TcE_Errors
TcE_Alloc_Fail_Too_Many_Module	common/inc/TcError.h	/^    TcE_Alloc_Fail_Too_Many_Module,$/;"	e	enum:TcE_Errors
TcE_Buffer_Too_Small	common/inc/TcError.h	/^    TcE_Buffer_Too_Small,$/;"	e	enum:TcE_Errors
TcE_Busy	common/inc/TcError.h	/^    TcE_Busy,$/;"	e	enum:TcE_Errors
TcE_Capacity_Reached	common/inc/TcError.h	/^    TcE_Capacity_Reached,$/;"	e	enum:TcE_Errors
TcE_EccReg_Invalid_Value	common/inc/TcError.h	/^    TcE_EccReg_Invalid_Value,$/;"	e	enum:TcE_Errors
TcE_End	common/inc/TcError.h	/^    TcE_End,$/;"	e	enum:TcE_Errors
TcE_End_Of_Str_Reach	common/inc/TcError.h	/^    TcE_End_Of_Str_Reach,$/;"	e	enum:TcE_Errors
TcE_Errors	common/inc/TcError.h	/^enum TcE_Errors {$/;"	g
TcE_Failed	common/inc/TcError.h	/^    TcE_Failed,$/;"	e	enum:TcE_Errors
TcE_HRam_Undefined	common/inc/TcError.h	/^    TcE_HRam_Undefined,$/;"	e	enum:TcE_Errors
TcE_Ilk_Protocol	common/inc/TcError.h	/^    TcE_Ilk_Protocol,$/;"	e	enum:TcE_Errors
TcE_Invalid_Argument	common/inc/TcError.h	/^    TcE_Invalid_Argument,$/;"	e	enum:TcE_Errors
TcE_Invalid_File_Format	common/inc/TcError.h	/^    TcE_Invalid_File_Format,$/;"	e	enum:TcE_Errors
TcE_Invalid_HexaDecimal_String	common/inc/TcError.h	/^    TcE_Invalid_HexaDecimal_String,$/;"	e	enum:TcE_Errors
TcE_Invalid_Pointer	common/inc/TcError.h	/^    TcE_Invalid_Pointer,$/;"	e	enum:TcE_Errors
TcE_Invalid_Xml_Str	common/inc/TcError.h	/^    TcE_Invalid_Xml_Str,$/;"	e	enum:TcE_Errors
TcE_Logic_Error	common/inc/TcError.h	/^    TcE_Logic_Error,$/;"	e	enum:TcE_Errors
TcE_Module_Invalid_MemType	common/inc/TcError.h	/^    TcE_Module_Invalid_MemType,$/;"	e	enum:TcE_Errors
TcE_Not_Found	common/inc/TcError.h	/^    TcE_Not_Found,$/;"	e	enum:TcE_Errors
TcE_Not_Implement	common/inc/TcError.h	/^    TcE_Not_Implement,$/;"	e	enum:TcE_Errors
TcE_Null_Pointer	common/inc/TcError.h	/^    TcE_Null_Pointer,$/;"	e	enum:TcE_Errors
TcE_OK	common/inc/TcError.h	/^    TcE_OK                                     = 0,    \/\/ success$/;"	e	enum:TcE_Warnings
TcE_Out_Of_Memory	common/inc/TcError.h	/^    TcE_Out_Of_Memory,$/;"	e	enum:TcE_Errors
TcE_Out_Of_Range	common/inc/TcError.h	/^    TcE_Out_Of_Range,$/;"	e	enum:TcE_Errors
TcE_Priority_Field_Invalid	common/inc/TcError.h	/^    TcE_Priority_Field_Invalid,$/;"	e	enum:TcE_Errors
TcE_Priority_Line_Format_Inconsistent	common/inc/TcError.h	/^    TcE_Priority_Line_Format_Inconsistent,$/;"	e	enum:TcE_Errors
TcE_Register_Undefine	common/inc/TcError.h	/^    TcE_Register_Undefine,$/;"	e	enum:TcE_Errors
TcE_Start	common/inc/TcError.h	/^    TcE_Start                                      = 0x80000000,$/;"	e	enum:TcE_Errors
TcE_TcRam_Address_Out_Of_Range	common/inc/TcError.h	/^    TcE_TcRam_Address_Out_Of_Range,$/;"	e	enum:TcE_Errors
TcE_TimeOut	common/inc/TcError.h	/^    TcE_TimeOut,$/;"	e	enum:TcE_Errors
TcE_Tpf_Parser_Invalid_Expected_Priority	common/inc/TcError.h	/^    TcE_Tpf_Parser_Invalid_Expected_Priority,$/;"	e	enum:TcE_Errors
TcE_Tpf_Parser_Invalid_LC	common/inc/TcError.h	/^    TcE_Tpf_Parser_Invalid_LC,$/;"	e	enum:TcE_Errors
TcE_Tpf_Parser_Invalid_LD	common/inc/TcError.h	/^    TcE_Tpf_Parser_Invalid_LD,$/;"	e	enum:TcE_Errors
TcE_Tpf_Parser_Invalid_Wr	common/inc/TcError.h	/^    TcE_Tpf_Parser_Invalid_Wr,$/;"	e	enum:TcE_Errors
TcE_Unsupport_Opcode	common/inc/TcError.h	/^    TcE_Unsupport_Opcode,$/;"	e	enum:TcE_Errors
TcE_Warnings	common/inc/TcError.h	/^enum TcE_Warnings {$/;"	g
TcE_XData_Depth_Mismatch	common/inc/TcError.h	/^    TcE_XData_Depth_Mismatch,$/;"	e	enum:TcE_Errors
TcE_XData_Init_BUFFER_TOO_SMALL	common/inc/TcError.h	/^    TcE_XData_Init_BUFFER_TOO_SMALL,         $/;"	e	enum:TcE_Errors
TcE_XData_Invalid_Hi	common/inc/TcError.h	/^    TcE_XData_Invalid_Hi,$/;"	e	enum:TcE_Errors
TcE_XData_Undefined	common/inc/TcError.h	/^    TcE_XData_Undefined,$/;"	e	enum:TcE_Errors
TcE_XData_Width_Mismatch	common/inc/TcError.h	/^    TcE_XData_Width_Mismatch,$/;"	e	enum:TcE_Errors
TcE_Xdata_Invalid_Lo	common/inc/TcError.h	/^    TcE_Xdata_Invalid_Lo,$/;"	e	enum:TcE_Errors
TcError	common/inc/TcError.h	/^typedef s32 TcError;$/;"	t
TcErrorName	utils.c	/^const char* TcErrorName(TcError rc)$/;"	f
TcKGU_ADDR_MASK	common/inc/defines.h	147;"	d
TcKGU_COUNT	common/inc/defines.h	155;"	d
TcKGU_KEY_DATA_BIT_START	common/inc/defines.h	53;"	d
TcKGU_KEY_OPCODE	common/inc/defines.h	55;"	d
TcKGU_MODULE_SHIFT	common/inc/defines.h	146;"	d
TcKey_BYTE_COUNT	common/inc/defines.h	125;"	d
TcKey_WIDTH	common/inc/defines.h	124;"	d
TcOctopus_PROFILE_ADDR_MASK	common/inc/defines.h	175;"	d
TcOctopus_PROFILE_MODULE_SHIFT	common/inc/defines.h	174;"	d
TcRReg_ADDR_OFFSET	common/inc/defines.h	141;"	d
TcRReg_COUNT	common/inc/defines.h	138;"	d
TcRReg_DEPTH_IN_BITS	common/inc/defines.h	139;"	d
TcRReg_MODULE_OFFSET	common/inc/defines.h	140;"	d
TcSB_ADDRESS_MASK	common/inc/defines.h	137;"	d
TcSB_COUNT	common/inc/defines.h	131;"	d
TcSB_COUNT_IN_BITS	common/inc/defines.h	130;"	d
TcSB_DEPTH	common/inc/defines.h	132;"	d
TcSB_DEPTH_IN_BITS	common/inc/defines.h	129;"	d
TcSB_KEY_PER_MODULE_BYTES	common/inc/defines.h	143;"	d
TcSB_KEY_PER_MODULE_CHARS	common/inc/defines.h	144;"	d
TcSB_KEY_SIZE_CHARS	common/inc/defines.h	126;"	d
TcSB_KEY_WIDTH_BYTES	common/inc/defines.h	128;"	d
TcSB_LD2_MODULE_SHIFT	common/inc/defines.h	136;"	d
TcSB_LD5_ADDRESS_SHIFT	common/inc/defines.h	134;"	d
TcSB_MODULE_MASK	common/inc/defines.h	135;"	d
TcSB_WIDTH_IN_BITS	common/inc/defines.h	133;"	d
TcW_Comment	common/inc/TcError.h	/^    TcW_Comment,$/;"	e	enum:TcE_Warnings
TcW_Ecc_Ded	common/inc/TcError.h	/^    TcW_Ecc_Ded,$/;"	e	enum:TcE_Warnings
TcW_Ecc_Reg_Updated	common/inc/TcError.h	/^    TcW_Ecc_Reg_Updated,$/;"	e	enum:TcE_Warnings
TcW_Ecc_Sec	common/inc/TcError.h	/^    TcW_Ecc_Sec,$/;"	e	enum:TcE_Warnings
TcW_Empty_Line	common/inc/TcError.h	/^    TcW_Empty_Line,$/;"	e	enum:TcE_Warnings
TcW_End	common/inc/TcError.h	/^    TcW_End,$/;"	e	enum:TcE_Warnings
TcW_Eof	common/inc/TcError.h	/^    TcW_Eof,$/;"	e	enum:TcE_Warnings
TcW_Ilk_Invalid	common/inc/TcError.h	/^    TcW_Ilk_Invalid,$/;"	e	enum:TcE_Warnings
TcW_Ilk_Partial_Data	common/inc/TcError.h	/^    TcW_Ilk_Partial_Data,$/;"	e	enum:TcE_Warnings
TcW_Interface	common/inc/TcError.h	/^    TcW_Interface,$/;"	e	enum:TcE_Warnings
TcW_IoCmd_Opcode_Ignored	common/inc/TcError.h	/^    TcW_IoCmd_Opcode_Ignored,$/;"	e	enum:TcE_Warnings
TcW_Tpf_Invalid	common/inc/TcError.h	/^    TcW_Tpf_Invalid,$/;"	e	enum:TcE_Warnings
Trie_Create	ftrie.c	/^FlashError Trie_Create(t_TrieNode** trienode, int prefix_len)$/;"	f
Trie_Destroy	ftrie.c	/^void Trie_Destroy(t_TrieNode *pNode)$/;"	f
Trie_Prefix_Add	ftrie.c	/^FlashError Trie_Prefix_Add(t_TrieNode *node, char *data_13, int id)$/;"	f
Trie_Prefix_Delete	ftrie.c	/^FlashError Trie_Prefix_Delete(t_TrieNode *node, char *data_13)$/;"	f
Trie_Prefix_Locate	ftrie.c	/^FlashError Trie_Prefix_Locate(t_TrieNode *node, char *data_13, int* last_num, int* locate)$/;"	f
Trie_Prefix_Search	ftrie.c	/^FlashError Trie_Prefix_Search(t_TrieNode *node, const char *prefix_data, int * locate)$/;"	f
U16	common/inc/types.h	/^typedef u16 U16;$/;"	t
U32	common/inc/types.h	/^typedef u32 U32;$/;"	t
U64	common/inc/types.h	/^typedef u64 U64;$/;"	t
U64_ALIGN_CEIL	common/inc/utils.h	30;"	d
U64_ALIGN_FLOOR	common/inc/utils.h	29;"	d
U64_ALIGN_PTR	common/inc/utils.h	34;"	d
U64_BIT_COUNT	common/inc/utils.h	28;"	d
U64_COUNT_CEIL	common/inc/utils.h	33;"	d
U64_COUNT_FLOOR	common/inc/utils.h	32;"	d
U64_MOD	common/inc/utils.h	31;"	d
U64_SHIFT	common/inc/utils.h	27;"	d
U8	common/inc/types.h	/^typedef u8 U8;$/;"	t
U8_ALIGN_CEIL	common/inc/utils.h	23;"	d
U8_ALIGN_FLOOR	common/inc/utils.h	22;"	d
U8_BIT_COUNT	common/inc/utils.h	21;"	d
U8_COUNT_CEIL	common/inc/utils.h	26;"	d
U8_COUNT_FLOOR	common/inc/utils.h	25;"	d
U8_MOD	common/inc/utils.h	24;"	d
U8_SHIFT	common/inc/utils.h	20;"	d
UpdatePcTrieChildNode	pc_trie.c	/^TcError UpdatePcTrieChildNode(pc_Trie *pcTrie, int index)$/;"	f
VMM_PER_MOD	common/inc/defines.h	29;"	d
ValidateNullPointer	utils.c	/^TcError ValidateNullPointer(const void* buff)$/;"	f
__BEBitBufferClearBits64	utils.c	/^static void __BEBitBufferClearBits64(void* buff, s32 buff_width, s32 bitStart, s32 bitCount) {$/;"	f	file:
__BEBitBufferClearBits8	utils.c	/^static void __BEBitBufferClearBits8(void *buff, s32 buff_width, s32 bitStart, s32 bitCount) {$/;"	f	file:
__BEBitBufferCountLeadingZero1	utils.c	/^static inline int __BEBitBufferCountLeadingZero1(void *in_byte, int bitCnt) {$/;"	f	file:
__BEBitBufferCountLeadingZero8	utils.c	/^static int __BEBitBufferCountLeadingZero8(void *buff, int width) {$/;"	f	file:
__BEBitBufferGetBits64	utils.c	/^static void __BEBitBufferGetBits64(const void* buff, s32 buff_width, s32 bitStart, s32 bitCount, void* out) {$/;"	f	file:
__BEBitBufferGetBits8	utils.c	/^static void __BEBitBufferGetBits8(const void* buff, s32 buff_width, s32 bitStart, s32 bitCount, void* out) {$/;"	f	file:
__BEBitBufferSetBits64	utils.c	/^static void __BEBitBufferSetBits64(void* buff, s32 buff_width, s32 bitStart, s32 bitCount, const void* in) {$/;"	f	file:
__BEBitBufferSetBits8	utils.c	/^static void __BEBitBufferSetBits8(void* buff, s32 buff_width, s32 bitStart, s32 bitCount, const void* in) {$/;"	f	file:
__BitBufferClearBit	utils.c	/^static void __BitBufferClearBit(void* buff, s32 bit)$/;"	f	file:
__BitBufferClearBits8	utils.c	/^static void __BitBufferClearBits8(void* bitBuff, s32 bitStart, s32 bitCount) {$/;"	f	file:
__BitBufferGetBit	utils.c	/^static void __BitBufferGetBit(const void* buff, s32 bit, s8* pBitValue)$/;"	f	file:
__BitBufferGetBits8	utils.c	/^static void __BitBufferGetBits8(const void* bitBuff, s32 bitStart, s32 bitCount, char* out)$/;"	f	file:
__BitBufferIsAllOne	utils.c	/^static void __BitBufferIsAllOne(const void* in, s32 width, s8* pResult)$/;"	f	file:
__BitBufferIsAllZero	utils.c	/^static void __BitBufferIsAllZero(const void* in, s32 width, s8* pResult)$/;"	f	file:
__BitBufferSetBit	utils.c	/^static void __BitBufferSetBit(void* buff, s32 bit)$/;"	f	file:
__BitBufferSetBits8	utils.c	/^static void __BitBufferSetBits8(void* bitBuff, s32 bitStart, s32 bitCount, const unsigned char* data)$/;"	f	file:
__Buffer_Size	List.c	17;"	d	file:
__Ch2Num	utils.c	/^char __Ch2Num(char ch)$/;"	f
__Chs2Num	utils.c	/^int __Chs2Num(char* chs, int width)$/;"	f
__DLList_h__	common/inc/DLList.h	2;"	d
__Element_At	List.c	18;"	d	file:
__FILENAME__	common/inc/log.h	72;"	d
__Index_Of	List.c	19;"	d	file:
__IoCmd_h__	common/inc/IoCmd.h	2;"	d
__Io_h__	common/inc/Io.h	2;"	d
__List_Clear_ValidMask_At	List.c	/^static int __List_Clear_ValidMask_At(List* list, int index) {$/;"	f	file:
__List_First_Valid_Index	List.c	/^static int __List_First_Valid_Index(List* list, int start, int* pIndex) {$/;"	f	file:
__List_GetAndSet_FreeIndex	List.c	/^static int __List_GetAndSet_FreeIndex(List* list) {$/;"	f	file:
__List_Get_Next_FreeIndex	List.c	/^static int  __List_Get_Next_FreeIndex(List *list, int index){	$/;"	f	file:
__List_IsClear_ValidMask_At	List.c	/^static int __List_IsClear_ValidMask_At(List* list, int index) {$/;"	f	file:
__List_IsSet_ValidMask_At	List.c	/^static int __List_IsSet_ValidMask_At(List* list, int index) {$/;"	f	file:
__List_Set_ValidMask_At	List.c	/^static int __List_Set_ValidMask_At(List* list, int index) {$/;"	f	file:
__List_h__	common/inc/List.h	2;"	d
__Platform_h__	common/inc/Platform.h	2;"	d
__TcError_h__	common/inc/TcError.h	2;"	d
__TcTypes_h__	common/inc/TcTypes.h	2;"	d
__ValidMask_Size	List.c	16;"	d	file:
__Validate_Index	List.c	20;"	d	file:
__Validate_Index_No_Message	List.c	32;"	d	file:
__attribute__	common/inc/utils.h	37;"	d
__defines_h__	common/inc/defines.h	2;"	d
__log_h__	common/inc/log.h	2;"	d
__pc_trie_h__	common/inc/pc_trie.h	2;"	d
__types_h__	common/inc/types.h	2;"	d
__utils_h__	common/inc/utils.h	2;"	d
ad	IoCmd.c	/^    u8 ad[IO_AD_BYTE_COUNT];$/;"	m	struct:sDataDbgLCOutput	file:
adAllocLog	common/inc/log.h	9;"	d
adLog	common/inc/log.h	10;"	d
addata	IoCmd.c	/^    u8 addata[BYTE_COUNT(4*256)];$/;"	m	struct:sDataDbgLCLpmAD	file:
address	IoCmd.c	/^    u32 address;$/;"	m	struct:sDataDbgLD3	file:
address	IoCmd.c	/^    u32 address;$/;"	m	struct:sDataOpCodeLD3	file:
adwidth	IoCmd.c	/^    u8 adwidth[BYTE_COUNT(4*3)];$/;"	m	struct:sDataDbgLCLpmAD	file:
adwidth	IoCmd.c	/^    u8 adwidth[IO_ADWIDTH_BYTE_COUNT];$/;"	m	struct:sDataDbgLCOutput	file:
allocModOnline	common/inc/log.h	11;"	d
allocModVmm	common/inc/log.h	12;"	d
allocModVtcam	common/inc/log.h	13;"	d
allocProRam	common/inc/log.h	14;"	d
apiListLog	common/inc/log.h	15;"	d
apiReadLog	common/inc/log.h	16;"	d
appLog	common/inc/log.h	17;"	d
assertLog	common/inc/log.h	84;"	d
assertWithLog	log.c	/^void assertWithLog(const char* func, const char* file, int line, const char* expr)$/;"	f
available	common/inc/pc_trie.h	/^	unsigned char available;$/;"	m	struct:sNHITableEntry
binary2str	flashApp0.c	/^void binary2str(char* in, char* out, int width)$/;"	f
bitMap	common/inc/pc_trie.h	/^typedef struct bitMap {$/;"	s
buffer	List.c	/^    void* buffer;$/;"	m	struct:sList	file:
capacity	List.c	/^    int   capacity;$/;"	m	struct:sList	file:
cascadeLog	common/inc/log.h	18;"	d
checkFn	common/inc/types.h	/^    const char* checkFn;$/;"	m	struct:__anon2
closeIo	log.c	/^void closeIo(eIo io)$/;"	f
closeLog	log.c	/^void closeLog(void)$/;"	f
cmtNseLib	IoCmd.c	/^        DataCmtNseLib       cmtNseLib;$/;"	m	union:sIoCmd::__anon3	file:
cmtString	IoCmd.c	/^        DataCmtString       cmtString;$/;"	m	union:sIoCmd::__anon3	file:
commonLibLog	common/inc/log.h	19;"	d
comp_func	common/inc/DLList.h	/^typedef int (comp_func)(DLList *node1, DLList *node2);$/;"	t
container_of	common/inc/utils.h	81;"	d
countOneMask	utils.c	/^static s32 countOneMask[] =$/;"	v	file:
data	IoCmd.c	/^    u8 data;$/;"	m	struct:sDataCmtNseLib	file:
data	IoCmd.c	/^    u8 data[IO_DATA_SIZE_BYTE_COUNT];$/;"	m	struct:sDataDbgLD3	file:
data	IoCmd.c	/^    u8 data[IO_DATA_SIZE_BYTE_COUNT];$/;"	m	struct:sDataOpCodeLD2	file:
data	common/inc/ftrie.h	/^	char *data;$/;"	m	struct:s_PrefixInfo
dbgLd3	IoCmd.c	/^        DataDbgLD3          dbgLd3;$/;"	m	union:sIoCmd::__anon3	file:
delay	IoCmd.c	/^    u16 delay;$/;"	m	struct:sDataOpCodeNop	file:
delay	IoCmd.c	/^    u16 delay;$/;"	m	struct:sDataOpCodeQuiet	file:
depth	common/inc/interface.h	/^	int    depth;$/;"	m	struct:s_Flashtable
dev	IoCmd.c	/^    u8 dev;$/;"	m	struct:sDataDbgLD3	file:
dev	IoCmd.c	/^    u8 dev;$/;"	m	struct:sDataDbgNFE	file:
dev	IoCmd.c	/^    u8 dev;$/;"	m	struct:sDataOpCodeLD2	file:
dev	IoCmd.c	/^    u8 dev;$/;"	m	struct:sDataOpCodeLD3	file:
devAddr	IoCmd.c	/^    u8 devAddr;$/;"	m	struct:sDataMdio	file:
digitRev	utils.c	/^void digitRev(char* src, char* des, int length)$/;"	f
displayResults	flashApp0.c	/^void displayResults(int* readys, int* matchs, int* priorities)$/;"	f
eIo	common/inc/log.h	/^} eIo;$/;"	t	typeref:enum:__anon1
eIoCnt	common/inc/log.h	/^    eIoCnt$/;"	e	enum:__anon1
eIoIlk	common/inc/log.h	/^    eIoIlk,$/;"	e	enum:__anon1
eIoIlkOut	common/inc/log.h	/^    eIoIlkOut,$/;"	e	enum:__anon1
eIoPdOut	common/inc/log.h	/^    eIoPdOut,$/;"	e	enum:__anon1
eIoTpf	common/inc/log.h	/^    eIoTpf,$/;"	e	enum:__anon1
eMemType	common/inc/TcTypes.h	/^typedef enum eMemType {$/;"	g
eQuartetMemType	common/inc/TcTypes.h	/^typedef enum eQuartetMemType {$/;"	g
eSize	List.c	/^    int   eSize;$/;"	m	struct:sList	file:
eccLog	common/inc/log.h	20;"	d
emptyIndex	List.c	/^    int emptyIndex;$/;"	m	struct:sList	file:
entry	common/inc/pc_trie.h	/^		NHITableEntry entry[PC_MOUDLE_SIZE];$/;"	m	struct:sNHIModuleSet::pcModule
entryCount	common/inc/pc_trie.h	/^	int entryCount[PC_MOUDLE_COUNT];$/;"	m	struct:sNHIModuleSet
errorLog	log.c	/^void errorLog(const char* label, int enable, const char* func, const char* file, int line, const char* fmt, ...)$/;"	f
exitLog	common/inc/log.h	75;"	d
exitWithLog	log.c	/^void exitWithLog(const char* func, const char* file, int line, const char* expr)$/;"	f
fillData	utils.c	/^API void fillData(void* buff, int size)$/;"	f
flashrecordList	common/inc/interface.h	/^	List* flashrecordList;$/;"	m	struct:s_Flashtable
fname	Io.c	/^    char fname[512];$/;"	m	struct:sIo	file:
forceFn	common/inc/types.h	/^    const char* forceFn;$/;"	m	struct:__anon2
fp	Io.c	/^    FILE* fp;$/;"	m	struct:sIo	file:
ftable	common/inc/interface.h	/^	sFlashtable* ftable;$/;"	m	struct:s_Flashrecord
genSearchLog	common/inc/log.h	21;"	d
gidMapCountLog	common/inc/log.h	22;"	d
gidMapLog	common/inc/log.h	23;"	d
gidMapModeLog	common/inc/log.h	24;"	d
goodBitsLog	common/inc/log.h	25;"	d
hex2val	utils.c	/^static int hex2val(char p)$/;"	f	file:
id	IoCmd.c	/^    u32 id;$/;"	m	struct:sDataCmtOnlineTable	file:
id	common/inc/ftrie.h	/^	int id;$/;"	m	struct:s_PrefixInfo
id	common/inc/ftrie.h	/^	int id;$/;"	m	struct:s_TrieNode
id	common/inc/interface.h	/^	int    id;$/;"	m	struct:s_Flashrecord
id	common/inc/interface.h	/^	int    id;$/;"	m	struct:s_Flashtable
ilkLog	common/inc/log.h	26;"	d
individualMark	common/inc/pc_trie.h	/^	unsigned char individualMark[((1 << COMPRESS_LYAER_NUMBER) + 7) \/ 8];$/;"	m	struct:sNHITableEntry
ioFns	log.c	/^char  ioFns[eIoCnt][512];$/;"	v
ioFps	log.c	/^FILE* ioFps[eIoCnt];$/;"	v
ioFpsInit	log.c	/^int ioFpsInit = -1;$/;"	v
isOnline	IoCmd.c	/^    u8 isOnline;$/;"	m	struct:sDataDbgLCInput	file:
is_prefix	common/inc/ftrie.h	/^	int is_prefix;$/;"	m	struct:s_TrieNode
key	IoCmd.c	/^    u8 key[BYTE_COUNT(144)];$/;"	m	struct:sDataDbgLCLpmAD	file:
key	IoCmd.c	/^    u8 key[IO_KEY_MAX_SIZE_BYTE_COUNT];$/;"	m	struct:sDataDbgLCInput	file:
key	IoCmd.c	/^    u8 key[IO_KEY_MAX_SIZE_BYTE_COUNT];$/;"	m	struct:sDataDbgLCOutput	file:
key	IoCmd.c	/^    u8 key[IO_KEY_MAX_SIZE_BYTE_COUNT];$/;"	m	struct:sDataOpCode_LD5_LC	file:
lcInput	IoCmd.c	/^        DataDbgLCInput      lcInput;$/;"	m	union:sIoCmd::__anon3	file:
lcOutput	IoCmd.c	/^        DataDbgLCOutput     lcOutput;$/;"	m	union:sIoCmd::__anon3	file:
lclpmAD	IoCmd.c	/^	DataDbgLCLpmAD      lclpmAD;$/;"	m	union:sIoCmd::__anon3	file:
ld2	IoCmd.c	/^        DataOpCodeLD2       ld2;$/;"	m	union:sIoCmd::__anon3	file:
ld3	IoCmd.c	/^        DataOpCodeLD3       ld3;$/;"	m	union:sIoCmd::__anon3	file:
ld5_lc	IoCmd.c	/^        DataOpCode_LD5_LC   ld5_lc;$/;"	m	union:sIoCmd::__anon3	file:
len	IoCmd.c	/^    u8  len;$/;"	m	struct:sDataCmtString	file:
lenth	common/inc/pc_trie.h	/^	int lenth;$/;"	m	struct:sPc_TrieNode
level	common/inc/interface.h	/^	int level; \/\/ if no match level = 0$/;"	m	struct:s_LpResult
logFn	log.c	/^char logFn[512];$/;"	v
logFp	log.c	/^FILE* logFp = NULL;$/;"	v
logLog	common/inc/log.h	27;"	d
lpmAllocLog	common/inc/log.h	28;"	d
lpmRecordId	common/inc/pc_trie.h	/^	int lpmRecordId;$/;"	m	struct:sPc_TrieNode
lpmRecordId	common/inc/pc_trie.h	/^	int lpmRecordId;$/;"	m	struct:sRootInfo
lpmRecordId	common/inc/pc_trie.h	/^	int lpmRecordId[1 << COMPRESS_LYAER_NUMBER];$/;"	m	struct:sNHITableEntry
lpmSearchLog	common/inc/log.h	29;"	d
main	flashApp0.c	/^int main(int argc, const char* argv[])$/;"	f
markOfModuleAvailable	common/inc/pc_trie.h	/^	int markOfModuleAvailable[PC_MOUDLE_COUNT];$/;"	m	struct:sNHIModuleSet
match	IoCmd.c	/^    u8 match;$/;"	m	struct:sDataDbgLCOutput	file:
match	common/inc/interface.h	/^	int match;$/;"	m	struct:s_LpResult
match1	IoCmd.c	/^    u8 match1;$/;"	m	struct:sDataDbgLCInput	file:
match1	IoCmd.c	/^    u8 match1;$/;"	m	struct:sDataDbgLCLpmAD	file:
match2	IoCmd.c	/^    u8 match2;$/;"	m	struct:sDataDbgLCInput	file:
mdio	IoCmd.c	/^        DataMdio            mdio;$/;"	m	union:sIoCmd::__anon3	file:
mdioLog	common/inc/log.h	30;"	d
memType	IoCmd.c	/^    u8 memType;$/;"	m	struct:sDataDbgNFE	file:
module	IoCmd.c	/^    u8 module;$/;"	m	struct:sDataDbgNFE	file:
module	common/inc/pc_trie.h	/^	}module[PC_MOUDLE_COUNT];$/;"	m	struct:sNHIModuleSet	typeref:struct:sNHIModuleSet::pcModule
moduleId	common/inc/pc_trie.h	/^	int moduleId;$/;"	m	struct:bitMap
moduleId	common/inc/pc_trie.h	/^	int moduleId;$/;"	m	struct:sRootInfo
mpid	IoCmd.c	/^    u8 mpid;$/;"	m	struct:sDataMdio	file:
msgLog	log.c	/^void msgLog(const char* label, int enable, const char* fmt, ...)$/;"	f
msgLogEx	log.c	/^void msgLogEx(const char* label, int enable, const char* func, const char* file, int line, const char* fmt, ...)$/;"	f
name	common/inc/interface.h	/^	char*  name;$/;"	m	struct:s_Flashtable
next	common/inc/DLList.h	/^    struct sDLList *next;$/;"	m	struct:sDLList	typeref:struct:sDLList::sDLList
nfe	IoCmd.c	/^        DataDbgNFE          nfe;$/;"	m	union:sIoCmd::__anon3	file:
nop	IoCmd.c	/^        DataOpCodeNop       nop;$/;"	m	union:sIoCmd::__anon3	file:
nseLibLog	common/inc/log.h	31;"	d
nseTestLog	common/inc/log.h	32;"	d
octopus	IoCmd.c	/^    u8 octopus;$/;"	m	struct:sDataDbgLD3	file:
octopus	IoCmd.c	/^    u8 octopus;$/;"	m	struct:sDataDbgNFE	file:
offlineLog	common/inc/log.h	33;"	d
offset_of	common/inc/utils.h	80;"	d
onlineCmdLog	common/inc/log.h	34;"	d
onlineLog	common/inc/log.h	35;"	d
onlineRecord	IoCmd.c	/^        DataCmtOnlineRecord onlineRecord;$/;"	m	union:sIoCmd::__anon3	file:
onlineTable	IoCmd.c	/^        DataCmtOnlineTable  onlineTable;$/;"	m	union:sIoCmd::__anon3	file:
opCode	IoCmd.c	/^        u8                  opCode;$/;"	m	union:sIoCmd::__anon3	file:
opCode	IoCmd.c	/^    u8  opCode;$/;"	m	struct:sDataCmtString	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataCmtNseLib	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataCmtOnlineRecord	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataCmtOnlineTable	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataDbgLCInput	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataDbgLCLpmAD	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataDbgLCOutput	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataDbgLD3	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataDbgNFE	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataMdio	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataOpCodeLD2	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataOpCodeLD3	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataOpCodeNop	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataOpCodeQuiet	file:
opCode	IoCmd.c	/^    u8 opCode;$/;"	m	struct:sDataOpCode_LD5_LC	file:
openIo	log.c	/^TcError openIo(eIo io, const char* name)$/;"	f
openLog	log.c	/^TcError openLog(const char* name)$/;"	f
operation	IoCmd.c	/^    u8 operation;$/;"	m	struct:sDataMdio	file:
option	common/inc/types.h	/^} option;$/;"	t	typeref:struct:__anon2
parentId	common/inc/pc_trie.h	/^	int parentId[COMPRESS_LYAER_NUMBER];$/;"	m	struct:sNHITableEntry
pcModule	common/inc/pc_trie.h	/^	struct pcModule { $/;"	s	struct:sNHIModuleSet
pc_Trie	common/inc/pc_trie.h	/^}pc_Trie;$/;"	t	typeref:struct:bitMap
pc_TrieNode	common/inc/pc_trie.h	/^}pc_TrieNode;$/;"	t	typeref:struct:sPc_TrieNode
prefix	common/inc/interface.h	/^	char*  prefix;$/;"	m	struct:s_Flashrecord
prev	common/inc/DLList.h	/^    struct sDLList *prev;$/;"	m	struct:sDLList	typeref:struct:sDLList::sDLList
printError	common/inc/log.h	80;"	d
printIo	log.c	/^void printIo(eIo io, const char* fmt, ...)$/;"	f
printLog	common/inc/log.h	121;"	d
printLog	common/inc/log.h	129;"	d
printWarn	common/inc/log.h	124;"	d
printWarn	common/inc/log.h	130;"	d
prior	IoCmd.c	/^    u32 prior;$/;"	m	struct:sDataCmtOnlineRecord	file:
prior	IoCmd.c	/^    u8 prior[IO_PRIORITY_BYTE_COUNT];$/;"	m	struct:sDataDbgLCOutput	file:
prior1	IoCmd.c	/^    u8 prior1[IO_PRIORITY_BYTE_COUNT];$/;"	m	struct:sDataDbgLCInput	file:
prior1	IoCmd.c	/^    u8 prior1[IO_PRIORITY_BYTE_COUNT];$/;"	m	struct:sDataDbgLCLpmAD	file:
prior2	IoCmd.c	/^    u8 prior2[IO_PRIORITY_BYTE_COUNT];$/;"	m	struct:sDataDbgLCInput	file:
profile	IoCmd.c	/^    u8 profile;$/;"	m	struct:sDataDbgLCInput	file:
profile	IoCmd.c	/^    u8 profile;$/;"	m	struct:sDataDbgLCLpmAD	file:
profile	IoCmd.c	/^    u8 profile;$/;"	m	struct:sDataDbgLCOutput	file:
profile	IoCmd.c	/^    u8 profile;$/;"	m	struct:sDataOpCode_LD5_LC	file:
quartDevLog	common/inc/log.h	36;"	d
quartLog	common/inc/log.h	37;"	d
queueAddLog	common/inc/log.h	38;"	d
queueProcessLog	common/inc/log.h	39;"	d
queueRemoveLog	common/inc/log.h	40;"	d
quiet	IoCmd.c	/^        DataOpCodeQuiet     quiet;$/;"	m	union:sIoCmd::__anon3	file:
readExpectSeqNumber	Io.c	/^    u32 readExpectSeqNumber;$/;"	m	struct:sIo	file:
readMagic	Io.c	/^    u32 readMagic;$/;"	m	struct:sIo	file:
readOpcode	Io.c	/^    u8 readOpcode;$/;"	m	struct:sIo	file:
readVersion	Io.c	/^    u32 readVersion;$/;"	m	struct:sIo	file:
ready	IoCmd.c	/^    u8 ready;$/;"	m	struct:sDataDbgLCOutput	file:
ready1	IoCmd.c	/^    u8 ready1;$/;"	m	struct:sDataDbgLCInput	file:
ready1	IoCmd.c	/^    u8 ready1;$/;"	m	struct:sDataDbgLCLpmAD	file:
ready2	IoCmd.c	/^    u8 ready2;$/;"	m	struct:sDataDbgLCInput	file:
realTcamLog	common/inc/log.h	41;"	d
recordCount	common/inc/interface.h	/^	int	   recordCount;$/;"	m	struct:s_Flashtable
recordData	common/inc/pc_trie.h	/^	unsigned char recordData[18];$/;"	m	struct:sPc_TrieNode
recordLog	common/inc/log.h	42;"	d
regAddr	IoCmd.c	/^    u16 regAddr;$/;"	m	struct:sDataMdio	file:
regData	IoCmd.c	/^    u16 regData;$/;"	m	struct:sDataMdio	file:
root	common/inc/pc_trie.h	/^	rootInfo root;$/;"	m	struct:bitMap
rootEntryIndex	common/inc/pc_trie.h	/^	NHITableEntry* rootEntryIndex;$/;"	m	struct:sRootInfo
rootInfo	common/inc/pc_trie.h	/^}rootInfo;$/;"	t	typeref:struct:sRootInfo
runOffLineLog	common/inc/log.h	43;"	d
s16	common/inc/types.h	/^typedef short               s16;$/;"	t
s32	common/inc/types.h	/^typedef int                 s32;$/;"	t
s64	common/inc/types.h	/^typedef long long           s64;$/;"	t
s8	common/inc/types.h	/^typedef char                s8;$/;"	t
sDLList	common/inc/DLList.h	/^typedef struct sDLList {$/;"	s
sDataCmtNseLib	IoCmd.c	/^typedef struct sDataCmtNseLib$/;"	s	file:
sDataCmtOnlineRecord	IoCmd.c	/^typedef struct sDataCmtOnlineRecord$/;"	s	file:
sDataCmtOnlineTable	IoCmd.c	/^typedef struct sDataCmtOnlineTable$/;"	s	file:
sDataCmtString	IoCmd.c	/^typedef struct sDataCmtString$/;"	s	file:
sDataDbgLCInput	IoCmd.c	/^typedef struct sDataDbgLCInput$/;"	s	file:
sDataDbgLCLpmAD	IoCmd.c	/^typedef struct sDataDbgLCLpmAD$/;"	s	file:
sDataDbgLCOutput	IoCmd.c	/^typedef struct sDataDbgLCOutput$/;"	s	file:
sDataDbgLD3	IoCmd.c	/^typedef struct sDataDbgLD3$/;"	s	file:
sDataDbgNFE	IoCmd.c	/^typedef struct sDataDbgNFE$/;"	s	file:
sDataMdio	IoCmd.c	/^typedef struct sDataMdio$/;"	s	file:
sDataOpCodeLD2	IoCmd.c	/^typedef struct sDataOpCodeLD2$/;"	s	file:
sDataOpCodeLD3	IoCmd.c	/^typedef struct sDataOpCodeLD3$/;"	s	file:
sDataOpCodeNop	IoCmd.c	/^typedef struct sDataOpCodeNop $/;"	s	file:
sDataOpCodeQuiet	IoCmd.c	/^typedef struct sDataOpCodeQuiet $/;"	s	file:
sDataOpCode_LD5_LC	IoCmd.c	/^typedef struct sDataOpCode_LD5_LC$/;"	s	file:
sFlashrecord	common/inc/interface.h	/^}sFlashrecord;$/;"	t	typeref:struct:s_Flashrecord
sFlashtable	common/inc/interface.h	/^}sFlashtable;$/;"	t	typeref:struct:s_Flashtable
sIo	Io.c	/^struct sIo$/;"	s	file:
sIoCmd	IoCmd.c	/^struct sIoCmd$/;"	s	file:
sList	List.c	/^struct sList$/;"	s	file:
sLpResult	common/inc/interface.h	/^}sLpResult;$/;"	t	typeref:struct:s_LpResult
sNHIModuleSet	common/inc/pc_trie.h	/^typedef struct sNHIModuleSet {$/;"	s
sNHITableEntry	common/inc/pc_trie.h	/^typedef struct sNHITableEntry {$/;"	s
sPc_TrieNode	common/inc/pc_trie.h	/^typedef struct sPc_TrieNode {$/;"	s
sRootInfo	common/inc/pc_trie.h	/^typedef struct sRootInfo {$/;"	s
s_Flashrecord	common/inc/interface.h	/^typedef struct s_Flashrecord$/;"	s
s_Flashtable	common/inc/interface.h	/^typedef struct s_Flashtable$/;"	s
s_LpResult	common/inc/interface.h	/^typedef struct s_LpResult$/;"	s
s_PrefixInfo	common/inc/ftrie.h	/^typedef struct s_PrefixInfo {$/;"	s
s_TrieNode	common/inc/ftrie.h	/^typedef struct s_TrieNode {$/;"	s
sbAddr	IoCmd.c	/^    u16 sbAddr;$/;"	m	struct:sDataDbgLCInput	file:
sbAddr	IoCmd.c	/^    u16 sbAddr;$/;"	m	struct:sDataDbgLCLpmAD	file:
sbAddr	IoCmd.c	/^    u16 sbAddr;$/;"	m	struct:sDataDbgLCOutput	file:
sbAddr	IoCmd.c	/^    u16 sbAddr;$/;"	m	struct:sDataOpCode_LD5_LC	file:
sec	IoCmd.c	/^    u8 sec;$/;"	m	struct:sDataDbgLCLpmAD	file:
sec	IoCmd.c	/^    u8 sec;$/;"	m	struct:sDataDbgLCOutput	file:
seqNumber	Io.c	/^    u32 seqNumber;$/;"	m	struct:sIo	file:
skrLog	common/inc/log.h	44;"	d
splitLog	common/inc/log.h	47;"	d
sqLog	common/inc/log.h	45;"	d
str	IoCmd.c	/^    char str[IO_CMT_STRING_MAX];$/;"	m	struct:sDataCmtString	file:
str2binary	flashApp0.c	/^void str2binary(char* str, int width)$/;"	f
strRev	utils.c	/^char *strRev(char *str)$/;"	f
syncLog	common/inc/log.h	46;"	d
t_PrefixInfo	common/inc/ftrie.h	/^} t_PrefixInfo;$/;"	t	typeref:struct:s_PrefixInfo
t_TrieNode	common/inc/ftrie.h	/^} t_TrieNode;$/;"	t	typeref:struct:s_TrieNode
tableName	IoCmd.c	/^    char tableName[IO_TABLE_NAME_BYTE_COUNT];$/;"	m	struct:sDataCmtOnlineRecord	file:
tableName	IoCmd.c	/^    char tableName[IO_TABLE_NAME_BYTE_COUNT];$/;"	m	struct:sDataCmtOnlineTable	file:
tcCmdLog	common/inc/log.h	54;"	d
tcamLog	common/inc/log.h	48;"	d
tcamMasterKey	common/inc/log.h	49;"	d
tcamModule	common/inc/log.h	50;"	d
tcamSearch	common/inc/log.h	53;"	d
tcamSearchMode	common/inc/log.h	51;"	d
tcamSearchPrio	common/inc/log.h	52;"	d
testHooksLog	common/inc/log.h	55;"	d
testmode	common/inc/types.h	/^    int testmode;$/;"	m	struct:__anon2
top_srcdir	makefile	/^		top_srcdir	=	.$/;"	m
tpfLog	common/inc/log.h	56;"	d
transportLog	common/inc/log.h	57;"	d
trieLog	common/inc/log.h	58;"	d
trie_number	interface.c	8;"	d	file:
trienode	common/inc/interface.h	/^	struct s_TrieNode* trienode;$/;"	m	struct:s_Flashtable	typeref:struct:s_Flashtable::s_TrieNode
type	Io.c	/^    int  type;$/;"	m	struct:sIo	file:
type	IoCmd.c	/^    u8 type;$/;"	m	struct:sDataDbgNFE	file:
u	IoCmd.c	/^    } u;$/;"	m	struct:sIoCmd	typeref:union:sIoCmd::__anon3	file:
u16	common/inc/types.h	/^typedef unsigned short      u16;$/;"	t
u32	common/inc/types.h	/^typedef unsigned int        u32;$/;"	t
u64	common/inc/types.h	/^typedef unsigned long long  u64;$/;"	t
u8	common/inc/types.h	/^typedef unsigned char       u8;$/;"	t
validMask	List.c	/^    void* validMask;$/;"	m	struct:sList	file:
validMaskCount	List.c	/^    int   validMaskCount;$/;"	m	struct:sList	file:
verifyActivationBit	common/inc/log.h	59;"	d
verifySplit	common/inc/log.h	60;"	d
verifyXC	common/inc/log.h	61;"	d
warnLog	log.c	/^void warnLog(const char* label, int enable, const char* func, const char* file, int line, const char* fmt, ...)$/;"	f
width	IoCmd.c	/^    u8 width;$/;"	m	struct:sDataDbgLCInput	file:
width	IoCmd.c	/^    u8 width;$/;"	m	struct:sDataDbgLCLpmAD	file:
width	IoCmd.c	/^    u8 width;$/;"	m	struct:sDataDbgLCOutput	file:
width	IoCmd.c	/^    u8 width;$/;"	m	struct:sDataOpCode_LD5_LC	file:
width	common/inc/interface.h	/^	int    width;$/;"	m	struct:s_Flashrecord
width	common/inc/interface.h	/^    int    width;$/;"	m	struct:s_Flashtable
xorMask	IoCmd.c	/^    u8 xorMask[IO_NFE_XOR_MASK_BYTE_COUNT];$/;"	m	struct:sDataDbgNFE	file:
